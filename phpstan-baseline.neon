parameters:
	ignoreErrors:
		-
			message: '#^Cannot call method has\(\) on PhpMyAdmin\\SqlParser\\Components\\OptionsArray\|null\.$#'
			identifier: method.nonObject
			count: 2
			path: src/Components/AlterOperation.php

		-
			message: '#^Cannot call method remove\(\) on PhpMyAdmin\\SqlParser\\Components\\OptionsArray\|null\.$#'
			identifier: method.nonObject
			count: 3
			path: src/Components/AlterOperation.php

		-
			message: '#^Cannot clone PhpMyAdmin\\SqlParser\\Components\\OptionsArray\|null\.$#'
			identifier: clone.nonObject
			count: 1
			path: src/Components/AlterOperation.php

		-
			message: '#^Only booleans are allowed in an if condition, string\|null given\.$#'
			identifier: if.condNotBoolean
			count: 1
			path: src/Components/CaseExpression.php

		-
			message: '#^Construct empty\(\) is not allowed\. Use more strict comparison\.$#'
			identifier: empty.notAllowed
			count: 3
			path: src/Components/CreateDefinition.php

		-
			message: '#^Only booleans are allowed in an if condition, bool\|null given\.$#'
			identifier: if.condNotBoolean
			count: 1
			path: src/Components/CreateDefinition.php

		-
			message: '#^Parameter \#1 \$string of function strtolower expects string, string\|null given\.$#'
			identifier: argument.type
			count: 1
			path: src/Components/DataType.php

		-
			message: '#^Construct empty\(\) is not allowed\. Use more strict comparison\.$#'
			identifier: empty.notAllowed
			count: 1
			path: src/Components/Expression.php

		-
			message: '#^Construct empty\(\) is not allowed\. Use more strict comparison\.$#'
			identifier: empty.notAllowed
			count: 1
			path: src/Components/IntoKeyword.php

		-
			message: '#^Only booleans are allowed in a ternary operator condition, bool\|null given\.$#'
			identifier: ternary.condNotBoolean
			count: 1
			path: src/Components/IntoKeyword.php

		-
			message: '#^Call to function array_search\(\) requires parameter \#3 to be set\.$#'
			identifier: function.strict
			count: 1
			path: src/Components/JoinKeyword.php

		-
			message: '#^Construct empty\(\) is not allowed\. Use more strict comparison\.$#'
			identifier: empty.notAllowed
			count: 2
			path: src/Components/JoinKeyword.php

		-
			message: '#^Construct empty\(\) is not allowed\. Use more strict comparison\.$#'
			identifier: empty.notAllowed
			count: 1
			path: src/Components/Key.php

		-
			message: '#^Property PhpMyAdmin\\SqlParser\\Components\\OptionsArray\:\:\$options \(array\<int, array\{name\: string, equals\: bool, expr\: PhpMyAdmin\\SqlParser\\Components\\Expression\|string, value\: string\|null\}\|string\>\) does not accept array\.$#'
			identifier: assign.propertyType
			count: 1
			path: src/Components/OptionsArray.php

		-
			message: '#^Construct empty\(\) is not allowed\. Use more strict comparison\.$#'
			identifier: empty.notAllowed
			count: 1
			path: src/Components/ParameterDefinition.php

		-
			message: '#^Parameter \#1 \$str of static method PhpMyAdmin\\SqlParser\\Context\:\:escape\(\) expects string, string\|null given\.$#'
			identifier: argument.type
			count: 1
			path: src/Components/ParameterDefinition.php

		-
			message: '#^Construct empty\(\) is not allowed\. Use more strict comparison\.$#'
			identifier: empty.notAllowed
			count: 4
			path: src/Components/PartitionDefinition.php

		-
			message: '#^Only booleans are allowed in an if condition, bool\|null given\.$#'
			identifier: if.condNotBoolean
			count: 1
			path: src/Components/PartitionDefinition.php

		-
			message: '#^Only booleans are allowed in an if condition, array\<PhpMyAdmin\\SqlParser\\Components\\ArrayObj\> given\.$#'
			identifier: if.condNotBoolean
			count: 1
			path: src/Components/WithKeyword.php

		-
			message: '#^Construct empty\(\) is not allowed\. Use more strict comparison\.$#'
			identifier: empty.notAllowed
			count: 1
			path: src/Context.php

		-
			message: '#^Only booleans are allowed in &&, int\<0, 1073741824\> given on the left side\.$#'
			identifier: booleanAnd.leftNotBoolean
			count: 1
			path: src/Context.php

		-
			message: '#^Only booleans are allowed in a negated boolean, int\<0, 2\> given\.$#'
			identifier: booleanNot.exprNotBoolean
			count: 1
			path: src/Context.php

		-
			message: '#^Only booleans are allowed in an if condition, int\<0, 2\> given\.$#'
			identifier: if.condNotBoolean
			count: 1
			path: src/Context.php

		-
			message: '#^Only booleans are allowed in \|\|, int\|null given on the left side\.$#'
			identifier: booleanOr.leftNotBoolean
			count: 1
			path: src/Context.php

		-
			message: '#^Static property PhpMyAdmin\\SqlParser\\Context\:\:\$keywords \(non\-empty\-array\<non\-empty\-string, int\>\) does not accept default value of type array\{\}\.$#'
			identifier: property.defaultValue
			count: 1
			path: src/Context.php

		-
			message: '#^Static property PhpMyAdmin\\SqlParser\\Context\:\:\$keywords \(non\-empty\-array\<non\-empty\-string, int\>\) does not accept mixed\.$#'
			identifier: assign.propertyType
			count: 1
			path: src/Context.php

		-
			message: '#^Binary operation "\." between mixed and mixed results in an error\.$#'
			identifier: binaryOp.invalid
			count: 2
			path: src/Lexer.php

		-
			message: '#^Binary operation "\." between string and mixed results in an error\.$#'
			identifier: binaryOp.invalid
			count: 2
			path: src/Lexer.php

		-
			message: '#^Binary operation "\.\=" between mixed and mixed results in an error\.$#'
			identifier: assignOp.invalid
			count: 9
			path: src/Lexer.php

		-
			message: '#^Binary operation "\.\=" between mixed and string results in an error\.$#'
			identifier: assignOp.invalid
			count: 2
			path: src/Lexer.php

		-
			message: '#^Binary operation "\.\=" between string and mixed results in an error\.$#'
			identifier: assignOp.invalid
			count: 11
			path: src/Lexer.php

		-
			message: '#^Cannot access property \$type on PhpMyAdmin\\SqlParser\\Token\|null\.$#'
			identifier: property.nonObject
			count: 2
			path: src/Lexer.php

		-
			message: '#^Cannot access property \$value on PhpMyAdmin\\SqlParser\\Token\|null\.$#'
			identifier: property.nonObject
			count: 3
			path: src/Lexer.php

		-
			message: '#^Construct empty\(\) is not allowed\. Use more strict comparison\.$#'
			identifier: empty.notAllowed
			count: 1
			path: src/Lexer.php

		-
			message: '#^Only booleans are allowed in &&, int\<0, 1\> given on the right side\.$#'
			identifier: booleanAnd.rightNotBoolean
			count: 1
			path: src/Lexer.php

		-
			message: '#^Only booleans are allowed in &&, int\<0, 2\> given on the right side\.$#'
			identifier: booleanAnd.rightNotBoolean
			count: 1
			path: src/Lexer.php

		-
			message: '#^Only booleans are allowed in a negated boolean, int\<0, 16\> given\.$#'
			identifier: booleanNot.exprNotBoolean
			count: 1
			path: src/Lexer.php

		-
			message: '#^Only booleans are allowed in a negated boolean, int\|null given\.$#'
			identifier: booleanNot.exprNotBoolean
			count: 2
			path: src/Lexer.php

		-
			message: '#^Only booleans are allowed in an elseif condition, int\<0, 16\> given\.$#'
			identifier: elseif.condNotBoolean
			count: 1
			path: src/Lexer.php

		-
			message: '#^Only booleans are allowed in an if condition, int\<0, 1\> given\.$#'
			identifier: if.condNotBoolean
			count: 1
			path: src/Lexer.php

		-
			message: '#^Parameter \#1 \$character of static method PhpMyAdmin\\SqlParser\\Context\:\:isString\(\) expects string, mixed given\.$#'
			identifier: argument.type
			count: 1
			path: src/Lexer.php

		-
			message: '#^Parameter \#1 \$character of static method PhpMyAdmin\\SqlParser\\Context\:\:isSymbol\(\) expects string, mixed given\.$#'
			identifier: argument.type
			count: 1
			path: src/Lexer.php

		-
			message: '#^Parameter \#1 \$character of static method PhpMyAdmin\\SqlParser\\Context\:\:isWhitespace\(\) expects string, mixed given\.$#'
			identifier: argument.type
			count: 5
			path: src/Lexer.php

		-
			message: '#^Parameter \#1 \$string of static method PhpMyAdmin\\SqlParser\\Context\:\:isComment\(\) expects string, mixed given\.$#'
			identifier: argument.type
			count: 2
			path: src/Lexer.php

		-
			message: '#^Parameter \#1 \$string of static method PhpMyAdmin\\SqlParser\\Context\:\:isSeparator\(\) expects string, mixed given\.$#'
			identifier: argument.type
			count: 4
			path: src/Lexer.php

		-
			message: '#^Parameter \#1 \$token of class PhpMyAdmin\\SqlParser\\Token constructor expects string, mixed given\.$#'
			identifier: argument.type
			count: 7
			path: src/Lexer.php

		-
			message: '#^Parameter \#2 \$str of method PhpMyAdmin\\SqlParser\\Lexer\:\:error\(\) expects string, mixed given\.$#'
			identifier: argument.type
			count: 2
			path: src/Lexer.php

		-
			message: '#^Parameter \#2 \.\.\.\$values of function sprintf expects bool\|float\|int\|string\|null, mixed given\.$#'
			identifier: argument.type
			count: 1
			path: src/Lexer.php

		-
			message: '#^Property PhpMyAdmin\\SqlParser\\Token\:\:\$keyword \(string\|null\) does not accept bool\|float\|int\|string\.$#'
			identifier: assign.propertyType
			count: 1
			path: src/Lexer.php

		-
			message: '#^Strict comparison using \=\=\= between non\-empty\-array\<non\-empty\-string, int\> and array\{\} will always evaluate to false\.$#'
			identifier: identical.alwaysFalse
			count: 1
			path: src/Lexer.php

		-
			message: '#^Cannot access property \$count on PhpMyAdmin\\SqlParser\\TokensList\|null\.$#'
			identifier: property.nonObject
			count: 1
			path: src/Parser.php

		-
			message: '#^Cannot access property \$first on mixed\.$#'
			identifier: property.nonObject
			count: 1
			path: src/Parser.php

		-
			message: '#^Cannot access property \$idx on PhpMyAdmin\\SqlParser\\TokensList\|null\.$#'
			identifier: property.nonObject
			count: 12
			path: src/Parser.php

		-
			message: '#^Cannot access property \$last on mixed\.$#'
			identifier: property.nonObject
			count: 1
			path: src/Parser.php

		-
			message: '#^Cannot access property \$tokens on PhpMyAdmin\\SqlParser\\TokensList\|null\.$#'
			identifier: property.nonObject
			count: 1
			path: src/Parser.php

		-
			message: '#^Cannot call method getNextOfType\(\) on PhpMyAdmin\\SqlParser\\TokensList\|null\.$#'
			identifier: method.nonObject
			count: 4
			path: src/Parser.php

		-
			message: '#^Cannot call method validateClauseOrder\(\) on mixed\.$#'
			identifier: method.nonObject
			count: 1
			path: src/Parser.php

		-
			message: '#^Construct empty\(\) is not allowed\. Use more strict comparison\.$#'
			identifier: empty.notAllowed
			count: 2
			path: src/Parser.php

		-
			message: '#^Instantiated class  not found\.$#'
			identifier: class.notFound
			count: 1
			path: src/Parser.php

		-
			message: '#^Only booleans are allowed in &&, PhpMyAdmin\\SqlParser\\Token\|null given on the left side\.$#'
			identifier: booleanAnd.leftNotBoolean
			count: 2
			path: src/Parser.php

		-
			message: '#^Parameter \#2 \$list of method PhpMyAdmin\\SqlParser\\Statement\:\:validateClauseOrder\(\) expects PhpMyAdmin\\SqlParser\\TokensList, PhpMyAdmin\\SqlParser\\TokensList\|null given\.$#'
			identifier: argument.type
			count: 2
			path: src/Parser.php

		-
			message: '#^Property PhpMyAdmin\\SqlParser\\Parser\:\:\$statements \(array\<PhpMyAdmin\\SqlParser\\Statement\>\) does not accept array\<mixed\>\.$#'
			identifier: assign.propertyType
			count: 1
			path: src/Parser.php

		-
			message: '#^Property PhpMyAdmin\\SqlParser\\Statements\\SelectStatement\:\:\$union \(array\<PhpMyAdmin\\SqlParser\\Statements\\SelectStatement\>\) does not accept array\<list\<PhpMyAdmin\\SqlParser\\Statements\\SelectStatement\|string\>\|PhpMyAdmin\\SqlParser\\Statements\\SelectStatement\>\.$#'
			identifier: assign.propertyType
			count: 1
			path: src/Parser.php

		-
			message: '#^Property PhpMyAdmin\\SqlParser\\Statements\\TransactionStatement\:\:\$statements \(array\<PhpMyAdmin\\SqlParser\\Statement\>\|null\) does not accept array\<mixed\>\.$#'
			identifier: assign.propertyType
			count: 1
			path: src/Parser.php

		-
			message: '#^Strict comparison using \=\=\= between non\-empty\-array\<non\-empty\-string, int\> and array\{\} will always evaluate to false\.$#'
			identifier: identical.alwaysFalse
			count: 1
			path: src/Parser.php

		-
			message: '#^Call to function in_array\(\) requires parameter \#3 to be set\.$#'
			identifier: function.strict
			count: 1
			path: src/Parsers/AlterOperations.php

		-
			message: '#^Cannot call method has\(\) on PhpMyAdmin\\SqlParser\\Components\\OptionsArray\|null\.$#'
			identifier: method.nonObject
			count: 2
			path: src/Parsers/AlterOperations.php

		-
			message: '#^Cannot call method isEmpty\(\) on PhpMyAdmin\\SqlParser\\Components\\OptionsArray\|null\.$#'
			identifier: method.nonObject
			count: 1
			path: src/Parsers/AlterOperations.php

		-
			message: '#^Cannot call method merge\(\) on PhpMyAdmin\\SqlParser\\Components\\OptionsArray\|null\.$#'
			identifier: method.nonObject
			count: 1
			path: src/Parsers/AlterOperations.php

		-
			message: '#^Construct empty\(\) is not allowed\. Use more strict comparison\.$#'
			identifier: empty.notAllowed
			count: 1
			path: src/Parsers/AlterOperations.php

		-
			message: '#^Only booleans are allowed in &&, PhpMyAdmin\\SqlParser\\Token\|null given on the right side\.$#'
			identifier: booleanAnd.rightNotBoolean
			count: 2
			path: src/Parsers/AlterOperations.php

		-
			message: '#^Property PhpMyAdmin\\SqlParser\\Components\\AlterOperation\:\:\$partitions \(array\<PhpMyAdmin\\SqlParser\\Components\\PartitionDefinition\>\|null\) does not accept array\<PhpMyAdmin\\SqlParser\\Component\>\|PhpMyAdmin\\SqlParser\\Components\\ArrayObj\.$#'
			identifier: assign.propertyType
			count: 1
			path: src/Parsers/AlterOperations.php

		-
			message: '#^Only booleans are allowed in &&, int\<0, 2\> given on the right side\.$#'
			identifier: booleanAnd.rightNotBoolean
			count: 1
			path: src/Parsers/Array2d.php

		-
			message: '#^Cannot access an offset on list\<mixed\>\|PhpMyAdmin\\SqlParser\\Components\\ArrayObj\.$#'
			identifier: offsetAccess.nonOffsetAccessible
			count: 1
			path: src/Parsers/ArrayObjs.php

		-
			message: '#^Cannot access property \$raw on list\<mixed\>\|PhpMyAdmin\\SqlParser\\Components\\ArrayObj\.$#'
			identifier: property.nonObject
			count: 2
			path: src/Parsers/ArrayObjs.php

		-
			message: '#^Cannot access property \$values on list\<mixed\>\|PhpMyAdmin\\SqlParser\\Components\\ArrayObj\.$#'
			identifier: property.nonObject
			count: 2
			path: src/Parsers/ArrayObjs.php

		-
			message: '#^Cannot call static method parse\(\) on mixed\.$#'
			identifier: staticMethod.nonObject
			count: 1
			path: src/Parsers/ArrayObjs.php

		-
			message: '#^Construct empty\(\) is not allowed\. Use more strict comparison\.$#'
			identifier: empty.notAllowed
			count: 5
			path: src/Parsers/ArrayObjs.php

		-
			message: '#^Method PhpMyAdmin\\SqlParser\\Parsers\\ArrayObjs\:\:parse\(\) should return array\<PhpMyAdmin\\SqlParser\\Component\>\|PhpMyAdmin\\SqlParser\\Components\\ArrayObj but returns list\<mixed\>\|PhpMyAdmin\\SqlParser\\Components\\ArrayObj\.$#'
			identifier: return.type
			count: 1
			path: src/Parsers/ArrayObjs.php

		-
			message: '#^Construct empty\(\) is not allowed\. Use more strict comparison\.$#'
			identifier: empty.notAllowed
			count: 2
			path: src/Parsers/CaseExpressions.php

		-
			message: '#^Only booleans are allowed in &&, int given on the right side\.$#'
			identifier: booleanAnd.rightNotBoolean
			count: 1
			path: src/Parsers/CaseExpressions.php

		-
			message: '#^Only booleans are allowed in a negated boolean, int given\.$#'
			identifier: booleanNot.exprNotBoolean
			count: 1
			path: src/Parsers/CaseExpressions.php

		-
			message: '#^Only booleans are allowed in \|\|, int\<0, 2\> given on the left side\.$#'
			identifier: booleanOr.leftNotBoolean
			count: 1
			path: src/Parsers/CaseExpressions.php

		-
			message: '#^Only booleans are allowed in \|\|, int\<0, 32\> given on the right side\.$#'
			identifier: booleanOr.rightNotBoolean
			count: 1
			path: src/Parsers/CaseExpressions.php

		-
			message: '#^Property PhpMyAdmin\\SqlParser\\Components\\CaseExpression\:\:\$alias \(string\|null\) does not accept bool\|float\|int\|string\.$#'
			identifier: assign.propertyType
			count: 1
			path: src/Parsers/CaseExpressions.php

		-
			message: '#^Property PhpMyAdmin\\SqlParser\\Components\\CaseExpression\:\:\$compareValues \(array\<PhpMyAdmin\\SqlParser\\Components\\Expression\>\) does not accept array\<PhpMyAdmin\\SqlParser\\Components\\Expression\|null\>\.$#'
			identifier: assign.propertyType
			count: 1
			path: src/Parsers/CaseExpressions.php

		-
			message: '#^Property PhpMyAdmin\\SqlParser\\Components\\CaseExpression\:\:\$results \(array\<PhpMyAdmin\\SqlParser\\Components\\Expression\>\) does not accept array\<PhpMyAdmin\\SqlParser\\Components\\Expression\|null\>\.$#'
			identifier: assign.propertyType
			count: 2
			path: src/Parsers/CaseExpressions.php

		-
			message: '#^Call to function in_array\(\) requires parameter \#3 to be set\.$#'
			identifier: function.strict
			count: 1
			path: src/Parsers/Conditions.php

		-
			message: '#^Only booleans are allowed in &&, int\<0, 2\> given on the right side\.$#'
			identifier: booleanAnd.rightNotBoolean
			count: 1
			path: src/Parsers/Conditions.php

		-
			message: '#^Only booleans are allowed in a negated boolean, int\<0, 32\> given\.$#'
			identifier: booleanNot.exprNotBoolean
			count: 1
			path: src/Parsers/Conditions.php

		-
			message: '#^Only booleans are allowed in \|\|, int\<0, 16\> given on the right side\.$#'
			identifier: booleanOr.rightNotBoolean
			count: 1
			path: src/Parsers/Conditions.php

		-
			message: '#^Only booleans are allowed in \|\|, int\<0, 2\> given on the right side\.$#'
			identifier: booleanOr.rightNotBoolean
			count: 1
			path: src/Parsers/Conditions.php

		-
			message: '#^Construct empty\(\) is not allowed\. Use more strict comparison\.$#'
			identifier: empty.notAllowed
			count: 4
			path: src/Parsers/CreateDefinitions.php

		-
			message: '#^Only booleans are allowed in &&, int\<0, 16\> given on the right side\.$#'
			identifier: booleanAnd.rightNotBoolean
			count: 1
			path: src/Parsers/CreateDefinitions.php

		-
			message: '#^Only booleans are allowed in a negated boolean, bool\|null given\.$#'
			identifier: booleanNot.exprNotBoolean
			count: 1
			path: src/Parsers/CreateDefinitions.php

		-
			message: '#^Only booleans are allowed in an if condition, int\<0, 2\> given\.$#'
			identifier: if.condNotBoolean
			count: 1
			path: src/Parsers/CreateDefinitions.php

		-
			message: '#^Property PhpMyAdmin\\SqlParser\\Components\\CreateDefinition\:\:\$name \(string\|null\) does not accept bool\|float\|int\|string\.$#'
			identifier: assign.propertyType
			count: 2
			path: src/Parsers/CreateDefinitions.php

		-
			message: '#^Cannot access property \$raw on array\<PhpMyAdmin\\SqlParser\\Component\>\|PhpMyAdmin\\SqlParser\\Components\\ArrayObj\.$#'
			identifier: property.nonObject
			count: 1
			path: src/Parsers/DataTypes.php

		-
			message: '#^Cannot access property \$values on array\<PhpMyAdmin\\SqlParser\\Component\>\|PhpMyAdmin\\SqlParser\\Components\\ArrayObj\.$#'
			identifier: property.nonObject
			count: 1
			path: src/Parsers/DataTypes.php

		-
			message: '#^Construct empty\(\) is not allowed\. Use more strict comparison\.$#'
			identifier: empty.notAllowed
			count: 1
			path: src/Parsers/DataTypes.php

		-
			message: '#^Only booleans are allowed in a negated boolean, int\<0, 8\> given\.$#'
			identifier: booleanNot.exprNotBoolean
			count: 1
			path: src/Parsers/DataTypes.php

		-
			message: '#^Method PhpMyAdmin\\SqlParser\\Parsers\\ExpressionArray\:\:parse\(\) should return array\<PhpMyAdmin\\SqlParser\\Components\\Expression\> but returns list\<PhpMyAdmin\\SqlParser\\Components\\CaseExpression\|PhpMyAdmin\\SqlParser\\Components\\Expression\>\.$#'
			identifier: return.type
			count: 1
			path: src/Parsers/ExpressionArray.php

		-
			message: '#^Only booleans are allowed in &&, int\<0, 2\> given on the right side\.$#'
			identifier: booleanAnd.rightNotBoolean
			count: 1
			path: src/Parsers/ExpressionArray.php

		-
			message: '#^Only booleans are allowed in &&, int\<0, 32\> given on the right side\.$#'
			identifier: booleanAnd.rightNotBoolean
			count: 1
			path: src/Parsers/ExpressionArray.php

		-
			message: '#^Only booleans are allowed in an if condition, int\|false given\.$#'
			identifier: if.condNotBoolean
			count: 1
			path: src/Parsers/ExpressionArray.php

		-
			message: '#^Parameter \#1 \$string of function strlen expects string, string\|null given\.$#'
			identifier: argument.type
			count: 1
			path: src/Parsers/ExpressionArray.php

		-
			message: '#^Parameter \#1 \$string of function substr expects string, string\|null given\.$#'
			identifier: argument.type
			count: 1
			path: src/Parsers/ExpressionArray.php

		-
			message: '#^Parameter \#2 \$subject of function preg_match expects string, string\|null given\.$#'
			identifier: argument.type
			count: 1
			path: src/Parsers/ExpressionArray.php

		-
			message: '#^Comparison operation "\<" between int\<1, max\> and 0 is always false\.$#'
			identifier: smaller.alwaysFalse
			count: 1
			path: src/Parsers/Expressions.php

		-
			message: '#^Construct empty\(\) is not allowed\. Use more strict comparison\.$#'
			identifier: empty.notAllowed
			count: 16
			path: src/Parsers/Expressions.php

		-
			message: '#^Only booleans are allowed in &&, PhpMyAdmin\\SqlParser\\Token\|null given on the right side\.$#'
			identifier: booleanAnd.rightNotBoolean
			count: 1
			path: src/Parsers/Expressions.php

		-
			message: '#^Only booleans are allowed in &&, int\<0, 16\> given on the right side\.$#'
			identifier: booleanAnd.rightNotBoolean
			count: 1
			path: src/Parsers/Expressions.php

		-
			message: '#^Only booleans are allowed in &&, int\<0, 1\> given on the right side\.$#'
			identifier: booleanAnd.rightNotBoolean
			count: 1
			path: src/Parsers/Expressions.php

		-
			message: '#^Only booleans are allowed in &&, int\<0, 2\> given on the left side\.$#'
			identifier: booleanAnd.leftNotBoolean
			count: 1
			path: src/Parsers/Expressions.php

		-
			message: '#^Only booleans are allowed in &&, int\<0, 32\> given on the left side\.$#'
			identifier: booleanAnd.leftNotBoolean
			count: 1
			path: src/Parsers/Expressions.php

		-
			message: '#^Only booleans are allowed in &&, int\<0, 32\> given on the right side\.$#'
			identifier: booleanAnd.rightNotBoolean
			count: 1
			path: src/Parsers/Expressions.php

		-
			message: '#^Only booleans are allowed in a negated boolean, int\<0, 16\> given\.$#'
			identifier: booleanNot.exprNotBoolean
			count: 1
			path: src/Parsers/Expressions.php

		-
			message: '#^Only booleans are allowed in a negated boolean, int\<0, 1\> given\.$#'
			identifier: booleanNot.exprNotBoolean
			count: 1
			path: src/Parsers/Expressions.php

		-
			message: '#^Only booleans are allowed in a negated boolean, int\<0, 2\> given\.$#'
			identifier: booleanNot.exprNotBoolean
			count: 1
			path: src/Parsers/Expressions.php

		-
			message: '#^Property PhpMyAdmin\\SqlParser\\Components\\Expression\:\:\$alias \(string\|null\) does not accept bool\|float\|int\|string\.$#'
			identifier: assign.propertyType
			count: 3
			path: src/Parsers/Expressions.php

		-
			message: '#^Property PhpMyAdmin\\SqlParser\\Components\\Expression\:\:\$function \(string\|null\) does not accept bool\|float\|int\|string\.$#'
			identifier: assign.propertyType
			count: 1
			path: src/Parsers/Expressions.php

		-
			message: '#^Variable property access on PhpMyAdmin\\SqlParser\\Components\\Expression\.$#'
			identifier: property.dynamicName
			count: 2
			path: src/Parsers/Expressions.php

		-
			message: '#^Property PhpMyAdmin\\SqlParser\\Components\\FunctionCall\:\:\$parameters \(PhpMyAdmin\\SqlParser\\Components\\ArrayObj\|null\) does not accept array\<PhpMyAdmin\\SqlParser\\Component\>\|PhpMyAdmin\\SqlParser\\Components\\ArrayObj\.$#'
			identifier: assign.propertyType
			count: 1
			path: src/Parsers/FunctionCalls.php

		-
			message: '#^Construct empty\(\) is not allowed\. Use more strict comparison\.$#'
			identifier: empty.notAllowed
			count: 2
			path: src/Parsers/GroupKeywords.php

		-
			message: '#^Property PhpMyAdmin\\SqlParser\\Components\\IndexHint\:\:\$type \(string\) does not accept mixed\.$#'
			identifier: assign.propertyType
			count: 1
			path: src/Parsers/IndexHints.php

		-
			message: '#^Cannot access property \$values on array\<PhpMyAdmin\\SqlParser\\Component\>\|PhpMyAdmin\\SqlParser\\Components\\ArrayObj\.$#'
			identifier: property.nonObject
			count: 1
			path: src/Parsers/IntoKeywords.php

		-
			message: '#^Only booleans are allowed in &&, int\<0, 2\> given on the right side\.$#'
			identifier: booleanAnd.rightNotBoolean
			count: 1
			path: src/Parsers/IntoKeywords.php

		-
			message: '#^Only booleans are allowed in &&, mixed given on the right side\.$#'
			identifier: booleanAnd.rightNotBoolean
			count: 2
			path: src/Parsers/IntoKeywords.php

		-
			message: '#^Parameter \#3 \$keyword of method PhpMyAdmin\\SqlParser\\Components\\IntoKeyword\:\:parseFileOptions\(\) expects string, string\|null given\.$#'
			identifier: argument.type
			count: 2
			path: src/Parsers/IntoKeywords.php

		-
			message: '#^Property PhpMyAdmin\\SqlParser\\Components\\IntoKeyword\:\:\$dest \(PhpMyAdmin\\SqlParser\\Components\\Expression\|string\|null\) does not accept bool\|float\|int\|string\.$#'
			identifier: assign.propertyType
			count: 1
			path: src/Parsers/IntoKeywords.php

		-
			message: '#^Construct empty\(\) is not allowed\. Use more strict comparison\.$#'
			identifier: empty.notAllowed
			count: 3
			path: src/Parsers/JoinKeywords.php

		-
			message: '#^Property PhpMyAdmin\\SqlParser\\Components\\JoinKeyword\:\:\$using \(PhpMyAdmin\\SqlParser\\Components\\ArrayObj\|null\) does not accept array\<PhpMyAdmin\\SqlParser\\Component\>\|PhpMyAdmin\\SqlParser\\Components\\ArrayObj\.$#'
			identifier: assign.propertyType
			count: 1
			path: src/Parsers/JoinKeywords.php

		-
			message: '#^Property PhpMyAdmin\\SqlParser\\Components\\Key\:\:\$columns \(array\<array\{name\?\: string, length\?\: int, order\?\: string\}\>\) does not accept non\-empty\-array\<array\<''length''\|''name''\|''order'', bool\|float\|int\|string\>\>\.$#'
			identifier: assign.propertyType
			count: 1
			path: src/Parsers/Keys.php

		-
			message: '#^Property PhpMyAdmin\\SqlParser\\Components\\Key\:\:\$name \(string\|null\) does not accept bool\|float\|int\|string\.$#'
			identifier: assign.propertyType
			count: 1
			path: src/Parsers/Keys.php

		-
			message: '#^Property PhpMyAdmin\\SqlParser\\Components\\Key\:\:\$type \(string\|null\) does not accept bool\|float\|int\|string\.$#'
			identifier: assign.propertyType
			count: 1
			path: src/Parsers/Keys.php

		-
			message: '#^Only booleans are allowed in &&, int\<0, 16\> given on the right side\.$#'
			identifier: booleanAnd.rightNotBoolean
			count: 1
			path: src/Parsers/Limits.php

		-
			message: '#^Only booleans are allowed in &&, int\<0, 2\> given on the right side\.$#'
			identifier: booleanAnd.rightNotBoolean
			count: 1
			path: src/Parsers/Limits.php

		-
			message: '#^Property PhpMyAdmin\\SqlParser\\Components\\Limit\:\:\$offset \(int\|string\) does not accept bool\|float\|int\|string\.$#'
			identifier: assign.propertyType
			count: 1
			path: src/Parsers/Limits.php

		-
			message: '#^Property PhpMyAdmin\\SqlParser\\Components\\Limit\:\:\$rowCount \(int\|string\) does not accept bool\|float\|int\|string\.$#'
			identifier: assign.propertyType
			count: 1
			path: src/Parsers/Limits.php

		-
			message: '#^Cannot access offset 1 on mixed\.$#'
			identifier: offsetAccess.nonOffsetAccessible
			count: 2
			path: src/Parsers/OptionsArrays.php

		-
			message: '#^Cannot access offset 2 on mixed\.$#'
			identifier: offsetAccess.nonOffsetAccessible
			count: 1
			path: src/Parsers/OptionsArrays.php

		-
			message: '#^Cannot assign offset ''equals'' to array\<string, bool\|PhpMyAdmin\\SqlParser\\Components\\Expression\|string\|null\>\|string\.$#'
			identifier: offsetAssign.dimType
			count: 1
			path: src/Parsers/OptionsArrays.php

		-
			message: '#^Cannot assign offset ''expr'' to array\<string, bool\|PhpMyAdmin\\SqlParser\\Components\\Expression\|string\|null\>\|string\.$#'
			identifier: offsetAssign.dimType
			count: 2
			path: src/Parsers/OptionsArrays.php

		-
			message: '#^Construct empty\(\) is not allowed\. Use more strict comparison\.$#'
			identifier: empty.notAllowed
			count: 2
			path: src/Parsers/OptionsArrays.php

		-
			message: '#^Offset ''expr'' might not exist on array\{name\: string, equals\: bool, expr\: PhpMyAdmin\\SqlParser\\Components\\Expression\|string, value\: string\|null\}\|string\.$#'
			identifier: offsetAccess.notFound
			count: 1
			path: src/Parsers/OptionsArrays.php

		-
			message: '#^Offset ''name'' might not exist on array\{name\: string, equals\: bool, expr\: PhpMyAdmin\\SqlParser\\Components\\Expression\|string, value\: string\|null\}\|string\.$#'
			identifier: offsetAccess.notFound
			count: 1
			path: src/Parsers/OptionsArrays.php

		-
			message: '#^Only booleans are allowed in &&, mixed given on the right side\.$#'
			identifier: booleanAnd.rightNotBoolean
			count: 1
			path: src/Parsers/OptionsArrays.php

		-
			message: '#^Parameter \#3 \$options of static method PhpMyAdmin\\SqlParser\\Parsers\\Expressions\:\:parse\(\) expects array\<string, mixed\>, mixed given\.$#'
			identifier: argument.type
			count: 1
			path: src/Parsers/OptionsArrays.php

		-
			message: '#^Property PhpMyAdmin\\SqlParser\\Components\\OptionsArray\:\:\$options \(array\<int, array\{name\: string, equals\: bool, expr\: PhpMyAdmin\\SqlParser\\Components\\Expression\|string, value\: string\|null\}\|string\>\) does not accept non\-empty\-array\<array\{name\: bool\|float\|int\|string, equals\: bool, expr\: PhpMyAdmin\\SqlParser\\Components\\Expression\|string, value\: string\|null\}\|string\>\.$#'
			identifier: assign.propertyType
			count: 2
			path: src/Parsers/OptionsArrays.php

		-
			message: '#^Property PhpMyAdmin\\SqlParser\\Components\\OptionsArray\:\:\$options \(array\<int, array\{name\: string, equals\: bool, expr\: PhpMyAdmin\\SqlParser\\Components\\Expression\|string, value\: string\|null\}\|string\>\) does not accept non\-empty\-array\<array\{name\: string, equals\: bool, expr\: PhpMyAdmin\\SqlParser\\Components\\Expression\|string, value\: string\|null\}\|bool\|float\|int\|string\>\.$#'
			identifier: assign.propertyType
			count: 1
			path: src/Parsers/OptionsArrays.php

		-
			message: '#^Property PhpMyAdmin\\SqlParser\\Components\\OptionsArray\:\:\$options \(array\<int, array\{name\: string, equals\: bool, expr\: PhpMyAdmin\\SqlParser\\Components\\Expression\|string, value\: string\|null\}\|string\>\) does not accept non\-empty\-array\<array\{name\: string, equals\: bool, expr\: PhpMyAdmin\\SqlParser\\Components\\Expression\|string, value\: string\|null\}\|string\>\.$#'
			identifier: assign.propertyType
			count: 3
			path: src/Parsers/OptionsArrays.php

		-
			message: '#^Property PhpMyAdmin\\SqlParser\\Components\\OptionsArray\:\:\$options \(array\<int, array\{name\: string, equals\: bool, expr\: PhpMyAdmin\\SqlParser\\Components\\Expression\|string, value\: string\|null\}\|string\>\) does not accept non\-empty\-array\<mixed\>\.$#'
			identifier: assign.propertyType
			count: 3
			path: src/Parsers/OptionsArrays.php

		-
			message: '#^Construct empty\(\) is not allowed\. Use more strict comparison\.$#'
			identifier: empty.notAllowed
			count: 2
			path: src/Parsers/OrderKeywords.php

		-
			message: '#^Property PhpMyAdmin\\SqlParser\\Components\\ParameterDefinition\:\:\$name \(string\|null\) does not accept bool\|float\|int\|string\.$#'
			identifier: assign.propertyType
			count: 1
			path: src/Parsers/ParameterDefinitions.php

		-
			message: '#^Property PhpMyAdmin\\SqlParser\\Components\\PartitionDefinition\:\:\$subpartitions \(array\<PhpMyAdmin\\SqlParser\\Components\\PartitionDefinition\>\|null\) does not accept array\<PhpMyAdmin\\SqlParser\\Component\>\|PhpMyAdmin\\SqlParser\\Components\\ArrayObj\.$#'
			identifier: assign.propertyType
			count: 1
			path: src/Parsers/PartitionDefinitions.php

		-
			message: '#^Property PhpMyAdmin\\SqlParser\\Components\\PartitionDefinition\:\:\$type \(string\|null\) does not accept bool\|float\|int\|string\.$#'
			identifier: assign.propertyType
			count: 1
			path: src/Parsers/PartitionDefinitions.php

		-
			message: '#^Cannot access property \$values on array\<PhpMyAdmin\\SqlParser\\Component\>\|PhpMyAdmin\\SqlParser\\Components\\ArrayObj\.$#'
			identifier: property.nonObject
			count: 1
			path: src/Parsers/References.php

		-
			message: '#^Construct empty\(\) is not allowed\. Use more strict comparison\.$#'
			identifier: empty.notAllowed
			count: 3
			path: src/Parsers/RenameOperations.php

		-
			message: '#^Only booleans are allowed in &&, int\<0, 2\> given on the right side\.$#'
			identifier: booleanAnd.rightNotBoolean
			count: 1
			path: src/Parsers/SetOperations.php

		-
			message: '#^Property PhpMyAdmin\\SqlParser\\Components\\SetOperation\:\:\$value \(string\) does not accept string\|null\.$#'
			identifier: assign.propertyType
			count: 1
			path: src/Parsers/SetOperations.php

		-
			message: '#^Access to an undefined property PhpMyAdmin\\SqlParser\\Statement\:\:\$call\.$#'
			identifier: property.notFound
			count: 2
			path: src/Statement.php

		-
			message: '#^Access to an undefined property PhpMyAdmin\\SqlParser\\Statement\:\:\$endOptions\.$#'
			identifier: property.notFound
			count: 2
			path: src/Statement.php

		-
			message: '#^Access to an undefined property PhpMyAdmin\\SqlParser\\Statement\:\:\$expr\.$#'
			identifier: property.notFound
			count: 2
			path: src/Statement.php

		-
			message: '#^Access to an undefined property PhpMyAdmin\\SqlParser\\Statement\:\:\$fields\.$#'
			identifier: property.notFound
			count: 2
			path: src/Statement.php

		-
			message: '#^Access to an undefined property PhpMyAdmin\\SqlParser\\Statement\:\:\$from\.$#'
			identifier: property.notFound
			count: 2
			path: src/Statement.php

		-
			message: '#^Access to an undefined property PhpMyAdmin\\SqlParser\\Statement\:\:\$group\.$#'
			identifier: property.notFound
			count: 2
			path: src/Statement.php

		-
			message: '#^Access to an undefined property PhpMyAdmin\\SqlParser\\Statement\:\:\$groupOptions\.$#'
			identifier: property.notFound
			count: 2
			path: src/Statement.php

		-
			message: '#^Access to an undefined property PhpMyAdmin\\SqlParser\\Statement\:\:\$having\.$#'
			identifier: property.notFound
			count: 2
			path: src/Statement.php

		-
			message: '#^Access to an undefined property PhpMyAdmin\\SqlParser\\Statement\:\:\$indexHints\.$#'
			identifier: property.notFound
			count: 2
			path: src/Statement.php

		-
			message: '#^Access to an undefined property PhpMyAdmin\\SqlParser\\Statement\:\:\$into\.$#'
			identifier: property.notFound
			count: 2
			path: src/Statement.php

		-
			message: '#^Access to an undefined property PhpMyAdmin\\SqlParser\\Statement\:\:\$join\.$#'
			identifier: property.notFound
			count: 2
			path: src/Statement.php

		-
			message: '#^Access to an undefined property PhpMyAdmin\\SqlParser\\Statement\:\:\$limit\.$#'
			identifier: property.notFound
			count: 2
			path: src/Statement.php

		-
			message: '#^Access to an undefined property PhpMyAdmin\\SqlParser\\Statement\:\:\$order\.$#'
			identifier: property.notFound
			count: 2
			path: src/Statement.php

		-
			message: '#^Access to an undefined property PhpMyAdmin\\SqlParser\\Statement\:\:\$partition\.$#'
			identifier: property.notFound
			count: 2
			path: src/Statement.php

		-
			message: '#^Access to an undefined property PhpMyAdmin\\SqlParser\\Statement\:\:\$procedure\.$#'
			identifier: property.notFound
			count: 2
			path: src/Statement.php

		-
			message: '#^Access to an undefined property PhpMyAdmin\\SqlParser\\Statement\:\:\$renames\.$#'
			identifier: property.notFound
			count: 2
			path: src/Statement.php

		-
			message: '#^Access to an undefined property PhpMyAdmin\\SqlParser\\Statement\:\:\$set\.$#'
			identifier: property.notFound
			count: 2
			path: src/Statement.php

		-
			message: '#^Access to an undefined property PhpMyAdmin\\SqlParser\\Statement\:\:\$table\.$#'
			identifier: property.notFound
			count: 2
			path: src/Statement.php

		-
			message: '#^Access to an undefined property PhpMyAdmin\\SqlParser\\Statement\:\:\$tables\.$#'
			identifier: property.notFound
			count: 2
			path: src/Statement.php

		-
			message: '#^Access to an undefined property PhpMyAdmin\\SqlParser\\Statement\:\:\$union\.$#'
			identifier: property.notFound
			count: 2
			path: src/Statement.php

		-
			message: '#^Access to an undefined property PhpMyAdmin\\SqlParser\\Statement\:\:\$values\.$#'
			identifier: property.notFound
			count: 2
			path: src/Statement.php

		-
			message: '#^Access to an undefined property PhpMyAdmin\\SqlParser\\Statement\:\:\$where\.$#'
			identifier: property.notFound
			count: 2
			path: src/Statement.php

		-
			message: '#^Access to undefined constant static\(PhpMyAdmin\\SqlParser\\Statement\)\:\:STATEMENT_END_OPTIONS\.$#'
			identifier: classConstant.notFound
			count: 1
			path: src/Statement.php

		-
			message: '#^Binary operation "\." between non\-falsy\-string and mixed results in an error\.$#'
			identifier: binaryOp.invalid
			count: 1
			path: src/Statement.php

		-
			message: '#^Cannot call method build\(\) on mixed\.$#'
			identifier: method.nonObject
			count: 1
			path: src/Statement.php

		-
			message: '#^Construct empty\(\) is not allowed\. Use more strict comparison\.$#'
			identifier: empty.notAllowed
			count: 2
			path: src/Statement.php

		-
			message: '#^Method PhpMyAdmin\\SqlParser\\Statement\:\:getClauseOrder\(\) should return array\<string, int\> but returns array\<int\|string, int\<0, max\>\>\.$#'
			identifier: return.type
			count: 1
			path: src/Statement.php

		-
			message: '#^Only booleans are allowed in a negated boolean, int given\.$#'
			identifier: booleanNot.exprNotBoolean
			count: 1
			path: src/Statement.php

		-
			message: '#^Only booleans are allowed in an if condition, int\<0, 1\> given\.$#'
			identifier: if.condNotBoolean
			count: 1
			path: src/Statement.php

		-
			message: '#^Only booleans are allowed in an if condition, int\<0, 2\> given\.$#'
			identifier: if.condNotBoolean
			count: 1
			path: src/Statement.php

		-
			message: '#^Parameter \#1 \$array of function array_keys expects array, mixed given\.$#'
			identifier: argument.type
			count: 1
			path: src/Statement.php

		-
			message: '#^Property PhpMyAdmin\\SqlParser\\Statement\:\:\$options \(PhpMyAdmin\\SqlParser\\Components\\OptionsArray\|null\) does not accept array\<PhpMyAdmin\\SqlParser\\Component\>\|PhpMyAdmin\\SqlParser\\Components\\ArrayObj\|PhpMyAdmin\\SqlParser\\Components\\Expression\|PhpMyAdmin\\SqlParser\\Components\\FunctionCall\|PhpMyAdmin\\SqlParser\\Components\\IntoKeyword\|PhpMyAdmin\\SqlParser\\Components\\Limit\|PhpMyAdmin\\SqlParser\\Components\\OptionsArray\|null\.$#'
			identifier: assign.propertyType
			count: 1
			path: src/Statement.php

		-
			message: '#^Variable property access on \$this\(PhpMyAdmin\\SqlParser\\Statement\)\.$#'
			identifier: property.dynamicName
			count: 5
			path: src/Statement.php

		-
			message: '#^Argument of an invalid type array\<PhpMyAdmin\\SqlParser\\Components\\AlterOperation\>\|null supplied for foreach, only iterables are supported\.$#'
			identifier: foreach.nonIterable
			count: 1
			path: src/Statements/AlterStatement.php

		-
			message: '#^Cannot call method build\(\) on PhpMyAdmin\\SqlParser\\Components\\Expression\|null\.$#'
			identifier: method.nonObject
			count: 1
			path: src/Statements/AlterStatement.php

		-
			message: '#^Cannot call method build\(\) on PhpMyAdmin\\SqlParser\\Components\\OptionsArray\|null\.$#'
			identifier: method.nonObject
			count: 1
			path: src/Statements/AlterStatement.php

		-
			message: '#^Cannot access property \$name on PhpMyAdmin\\SqlParser\\Components\\FunctionCall\|null\.$#'
			identifier: property.nonObject
			count: 1
			path: src/Statements/CallStatement.php

		-
			message: '#^Cannot access property \$parameters on PhpMyAdmin\\SqlParser\\Components\\FunctionCall\|null\.$#'
			identifier: property.nonObject
			count: 2
			path: src/Statements/CallStatement.php

		-
			message: '#^Only booleans are allowed in a ternary operator condition, PhpMyAdmin\\SqlParser\\Components\\ArrayObj\|null given\.$#'
			identifier: ternary.condNotBoolean
			count: 1
			path: src/Statements/CallStatement.php

		-
			message: '#^Binary operation "\.\=" between mixed and string results in an error\.$#'
			identifier: assignOp.invalid
			count: 1
			path: src/Statements/CreateStatement.php

		-
			message: '#^Cannot access property \$database on PhpMyAdmin\\SqlParser\\Components\\Expression\|null\.$#'
			identifier: property.nonObject
			count: 1
			path: src/Statements/CreateStatement.php

		-
			message: '#^Cannot access property \$table on PhpMyAdmin\\SqlParser\\Components\\Expression\|null\.$#'
			identifier: property.nonObject
			count: 1
			path: src/Statements/CreateStatement.php

		-
			message: '#^Cannot access property \$value on PhpMyAdmin\\SqlParser\\Token\|null\.$#'
			identifier: property.nonObject
			count: 2
			path: src/Statements/CreateStatement.php

		-
			message: '#^Cannot call method build\(\) on PhpMyAdmin\\SqlParser\\Components\\DataType\|null\.$#'
			identifier: method.nonObject
			count: 1
			path: src/Statements/CreateStatement.php

		-
			message: '#^Cannot call method build\(\) on PhpMyAdmin\\SqlParser\\Components\\Expression\|null\.$#'
			identifier: method.nonObject
			count: 10
			path: src/Statements/CreateStatement.php

		-
			message: '#^Cannot call method build\(\) on PhpMyAdmin\\SqlParser\\Components\\OptionsArray\|null\.$#'
			identifier: method.nonObject
			count: 12
			path: src/Statements/CreateStatement.php

		-
			message: '#^Cannot call method get\(\) on PhpMyAdmin\\SqlParser\\Components\\OptionsArray\|null\.$#'
			identifier: method.nonObject
			count: 2
			path: src/Statements/CreateStatement.php

		-
			message: '#^Cannot call method has\(\) on PhpMyAdmin\\SqlParser\\Components\\OptionsArray\|null\.$#'
			identifier: method.nonObject
			count: 9
			path: src/Statements/CreateStatement.php

		-
			message: '#^Construct empty\(\) is not allowed\. Use more strict comparison\.$#'
			identifier: empty.notAllowed
			count: 8
			path: src/Statements/CreateStatement.php

		-
			message: '#^Only numeric types are allowed in \+, int\|false given on the left side\.$#'
			identifier: plus.leftNonNumeric
			count: 1
			path: src/Statements/CreateStatement.php

		-
			message: '#^Only numeric types are allowed in pre\-decrement, int\|false given\.$#'
			identifier: preDec.nonNumeric
			count: 1
			path: src/Statements/CreateStatement.php

		-
			message: '#^Parameter \#1 \$component of static method PhpMyAdmin\\SqlParser\\Parsers\\ParameterDefinitions\:\:buildAll\(\) expects array\<PhpMyAdmin\\SqlParser\\Components\\ParameterDefinition\>, array\<PhpMyAdmin\\SqlParser\\Components\\ParameterDefinition\>\|null given\.$#'
			identifier: argument.type
			count: 1
			path: src/Statements/CreateStatement.php

		-
			message: '#^Property PhpMyAdmin\\SqlParser\\Statements\\CreateStatement\:\:\$fields \(array\<PhpMyAdmin\\SqlParser\\Components\\CreateDefinition\>\|PhpMyAdmin\\SqlParser\\Components\\ArrayObj\|null\) does not accept array\<PhpMyAdmin\\SqlParser\\Component\>\|PhpMyAdmin\\SqlParser\\Components\\ArrayObj\.$#'
			identifier: assign.propertyType
			count: 1
			path: src/Statements/CreateStatement.php

		-
			message: '#^Property PhpMyAdmin\\SqlParser\\Statements\\CreateStatement\:\:\$partitions \(array\<PhpMyAdmin\\SqlParser\\Components\\PartitionDefinition\>\|null\) does not accept array\<PhpMyAdmin\\SqlParser\\Component\>\|PhpMyAdmin\\SqlParser\\Components\\ArrayObj\.$#'
			identifier: assign.propertyType
			count: 1
			path: src/Statements/CreateStatement.php

		-
			message: '#^Property PhpMyAdmin\\SqlParser\\Statements\\CreateStatement\:\:\$partitionsNum \(int\|null\) does not accept bool\|float\|int\|string\.$#'
			identifier: assign.propertyType
			count: 1
			path: src/Statements/CreateStatement.php

		-
			message: '#^Property PhpMyAdmin\\SqlParser\\Statements\\CreateStatement\:\:\$subpartitionsNum \(int\|null\) does not accept bool\|float\|int\|string\.$#'
			identifier: assign.propertyType
			count: 1
			path: src/Statements/CreateStatement.php

		-
			message: '#^Variable property access on \$this\(PhpMyAdmin\\SqlParser\\Statements\\CreateStatement\)\.$#'
			identifier: property.dynamicName
			count: 3
			path: src/Statements/CreateStatement.php

		-
			message: '#^Argument of an invalid type array\<PhpMyAdmin\\SqlParser\\Components\\Expression\>\|null supplied for foreach, only iterables are supported\.$#'
			identifier: foreach.nonIterable
			count: 1
			path: src/Statements/DeleteStatement.php

		-
			message: '#^Cannot call method build\(\) on PhpMyAdmin\\SqlParser\\Components\\OptionsArray\|null\.$#'
			identifier: method.nonObject
			count: 1
			path: src/Statements/DeleteStatement.php

		-
			message: '#^Parameter \#1 \$haystack of function stripos expects string, string\|null given\.$#'
			identifier: argument.type
			count: 1
			path: src/Statements/DeleteStatement.php

		-
			message: '#^Cannot access property \$keyword on PhpMyAdmin\\SqlParser\\Token\|null\.$#'
			identifier: property.nonObject
			count: 1
			path: src/Statements/ExplainStatement.php

		-
			message: '#^Cannot access property \$value on PhpMyAdmin\\SqlParser\\Token\|null\.$#'
			identifier: property.nonObject
			count: 1
			path: src/Statements/ExplainStatement.php

		-
			message: '#^Class PhpMyAdmin\\SqlParser\\Statements\\ExplainStatement has an uninitialized property \$statementAlias\. Give it default value or assign it in the constructor\.$#'
			identifier: property.uninitialized
			count: 1
			path: src/Statements/ExplainStatement.php

		-
			message: '#^Only booleans are allowed in &&, PhpMyAdmin\\SqlParser\\Token\|null given on the left side\.$#'
			identifier: booleanAnd.leftNotBoolean
			count: 1
			path: src/Statements/ExplainStatement.php

		-
			message: '#^Only booleans are allowed in an elseif condition, int\|null given\.$#'
			identifier: elseif.condNotBoolean
			count: 1
			path: src/Statements/ExplainStatement.php

		-
			message: '#^Only booleans are allowed in an if condition, PhpMyAdmin\\SqlParser\\Parser\|null given\.$#'
			identifier: if.condNotBoolean
			count: 1
			path: src/Statements/ExplainStatement.php

		-
			message: '#^Property PhpMyAdmin\\SqlParser\\Statements\\ExplainStatement\:\:\$connectionId \(int\|null\) does not accept bool\|float\|int\|string\.$#'
			identifier: assign.propertyType
			count: 1
			path: src/Statements/ExplainStatement.php

		-
			message: '#^Property PhpMyAdmin\\SqlParser\\Statements\\ExplainStatement\:\:\$explainedDatabase \(string\|null\) does not accept bool\|float\|int\|string\.$#'
			identifier: assign.propertyType
			count: 1
			path: src/Statements/ExplainStatement.php

		-
			message: '#^Property PhpMyAdmin\\SqlParser\\Statements\\ExplainStatement\:\:\$explainedTable \(string\|null\) does not accept bool\|float\|int\|string\.$#'
			identifier: assign.propertyType
			count: 1
			path: src/Statements/ExplainStatement.php

		-
			message: '#^Strict comparison using \!\=\= between bool\|float\|int\|string and null will always evaluate to true\.$#'
			identifier: notIdentical.alwaysTrue
			count: 1
			path: src/Statements/ExplainStatement.php

		-
			message: '#^Only booleans are allowed in &&, PhpMyAdmin\\SqlParser\\Token\|null given on the left side\.$#'
			identifier: booleanAnd.leftNotBoolean
			count: 1
			path: src/Statements/KillStatement.php

		-
			message: '#^Cannot access property \$keyword on PhpMyAdmin\\SqlParser\\Token\|null\.$#'
			identifier: property.nonObject
			count: 2
			path: src/Statements/LoadStatement.php

		-
			message: '#^Cannot access property \$token on PhpMyAdmin\\SqlParser\\Token\|null\.$#'
			identifier: property.nonObject
			count: 1
			path: src/Statements/LoadStatement.php

		-
			message: '#^Cannot access property \$type on PhpMyAdmin\\SqlParser\\Token\|null\.$#'
			identifier: property.nonObject
			count: 1
			path: src/Statements/LoadStatement.php

		-
			message: '#^Comparison operation "\>\=" between int\<3, max\> and 3 is always true\.$#'
			identifier: greaterOrEqual.alwaysTrue
			count: 1
			path: src/Statements/LoadStatement.php

		-
			message: '#^Parameter \#3 \$keyword of method PhpMyAdmin\\SqlParser\\Statements\\LoadStatement\:\:parseFileOptions\(\) expects string, bool\|float\|int\|string given\.$#'
			identifier: argument.type
			count: 1
			path: src/Statements/LoadStatement.php

		-
			message: '#^Property PhpMyAdmin\\SqlParser\\Statements\\LoadStatement\:\:\$partition \(PhpMyAdmin\\SqlParser\\Components\\ArrayObj\|null\) does not accept array\<PhpMyAdmin\\SqlParser\\Component\>\|PhpMyAdmin\\SqlParser\\Components\\ArrayObj\.$#'
			identifier: assign.propertyType
			count: 1
			path: src/Statements/LoadStatement.php

		-
			message: '#^Cannot call method merge\(\) on PhpMyAdmin\\SqlParser\\Components\\OptionsArray\|null\.$#'
			identifier: method.nonObject
			count: 1
			path: src/Statements/MaintenanceStatement.php

		-
			message: '#^Call to function in_array\(\) requires parameter \#3 to be set\.$#'
			identifier: function.strict
			count: 1
			path: src/Statements/PurgeStatement.php

		-
			message: '#^Parameter \#1 \$component of static method PhpMyAdmin\\SqlParser\\Parsers\\RenameOperations\:\:buildAll\(\) expects array\<PhpMyAdmin\\SqlParser\\Components\\RenameOperation\>, array\<PhpMyAdmin\\SqlParser\\Components\\RenameOperation\>\|null given\.$#'
			identifier: argument.type
			count: 1
			path: src/Statements/RenameStatement.php

		-
			message: '#^Access to an undefined property PhpMyAdmin\\SqlParser\\Statements\\SelectStatement\:\:\$call\.$#'
			identifier: property.notFound
			count: 1
			path: src/Statements/SelectStatement.php

		-
			message: '#^Access to an undefined property PhpMyAdmin\\SqlParser\\Statements\\SelectStatement\:\:\$fields\.$#'
			identifier: property.notFound
			count: 1
			path: src/Statements/SelectStatement.php

		-
			message: '#^Access to an undefined property PhpMyAdmin\\SqlParser\\Statements\\SelectStatement\:\:\$renames\.$#'
			identifier: property.notFound
			count: 1
			path: src/Statements/SelectStatement.php

		-
			message: '#^Access to an undefined property PhpMyAdmin\\SqlParser\\Statements\\SelectStatement\:\:\$set\.$#'
			identifier: property.notFound
			count: 1
			path: src/Statements/SelectStatement.php

		-
			message: '#^Access to an undefined property PhpMyAdmin\\SqlParser\\Statements\\SelectStatement\:\:\$table\.$#'
			identifier: property.notFound
			count: 1
			path: src/Statements/SelectStatement.php

		-
			message: '#^Access to an undefined property PhpMyAdmin\\SqlParser\\Statements\\SelectStatement\:\:\$tables\.$#'
			identifier: property.notFound
			count: 1
			path: src/Statements/SelectStatement.php

		-
			message: '#^Access to an undefined property PhpMyAdmin\\SqlParser\\Statements\\SelectStatement\:\:\$values\.$#'
			identifier: property.notFound
			count: 1
			path: src/Statements/SelectStatement.php

		-
			message: '#^Construct empty\(\) is not allowed\. Use more strict comparison\.$#'
			identifier: empty.notAllowed
			count: 1
			path: src/Statements/SelectStatement.php

		-
			message: '#^Only booleans are allowed in &&, PhpMyAdmin\\SqlParser\\Token\|null given on the left side\.$#'
			identifier: booleanAnd.leftNotBoolean
			count: 1
			path: src/Statements/SelectStatement.php

		-
			message: '#^Only booleans are allowed in &&, PhpMyAdmin\\SqlParser\\Token\|null given on the right side\.$#'
			identifier: booleanAnd.rightNotBoolean
			count: 2
			path: src/Statements/SelectStatement.php

		-
			message: '#^Property PhpMyAdmin\\SqlParser\\Statement\:\:\$options \(PhpMyAdmin\\SqlParser\\Components\\OptionsArray\|null\) does not accept array\<PhpMyAdmin\\SqlParser\\Component\>\|PhpMyAdmin\\SqlParser\\Components\\ArrayObj\|PhpMyAdmin\\SqlParser\\Components\\Expression\|PhpMyAdmin\\SqlParser\\Components\\FunctionCall\|PhpMyAdmin\\SqlParser\\Components\\IntoKeyword\|PhpMyAdmin\\SqlParser\\Components\\Limit\|PhpMyAdmin\\SqlParser\\Components\\OptionsArray\|null\.$#'
			identifier: assign.propertyType
			count: 1
			path: src/Statements/SelectStatement.php

		-
			message: '#^Property PhpMyAdmin\\SqlParser\\Statements\\SelectStatement\:\:\$endOptions \(PhpMyAdmin\\SqlParser\\Components\\OptionsArray\|null\) does not accept array\<PhpMyAdmin\\SqlParser\\Component\>\|PhpMyAdmin\\SqlParser\\Components\\ArrayObj\|PhpMyAdmin\\SqlParser\\Components\\Expression\|PhpMyAdmin\\SqlParser\\Components\\FunctionCall\|PhpMyAdmin\\SqlParser\\Components\\IntoKeyword\|PhpMyAdmin\\SqlParser\\Components\\Limit\|PhpMyAdmin\\SqlParser\\Components\\OptionsArray\|null\.$#'
			identifier: assign.propertyType
			count: 1
			path: src/Statements/SelectStatement.php

		-
			message: '#^Property PhpMyAdmin\\SqlParser\\Statements\\SelectStatement\:\:\$expr \(array\<PhpMyAdmin\\SqlParser\\Components\\CaseExpression\|PhpMyAdmin\\SqlParser\\Components\\Expression\>\) does not accept array\<PhpMyAdmin\\SqlParser\\Component\>\|PhpMyAdmin\\SqlParser\\Components\\ArrayObj\|PhpMyAdmin\\SqlParser\\Components\\Expression\|PhpMyAdmin\\SqlParser\\Components\\FunctionCall\|PhpMyAdmin\\SqlParser\\Components\\IntoKeyword\|PhpMyAdmin\\SqlParser\\Components\\Limit\|PhpMyAdmin\\SqlParser\\Components\\OptionsArray\|null\.$#'
			identifier: assign.propertyType
			count: 1
			path: src/Statements/SelectStatement.php

		-
			message: '#^Property PhpMyAdmin\\SqlParser\\Statements\\SelectStatement\:\:\$from \(array\<PhpMyAdmin\\SqlParser\\Components\\Expression\>\) does not accept array\<PhpMyAdmin\\SqlParser\\Component\>\|PhpMyAdmin\\SqlParser\\Components\\ArrayObj\|PhpMyAdmin\\SqlParser\\Components\\Expression\|PhpMyAdmin\\SqlParser\\Components\\FunctionCall\|PhpMyAdmin\\SqlParser\\Components\\IntoKeyword\|PhpMyAdmin\\SqlParser\\Components\\Limit\|PhpMyAdmin\\SqlParser\\Components\\OptionsArray\|null\.$#'
			identifier: assign.propertyType
			count: 1
			path: src/Statements/SelectStatement.php

		-
			message: '#^Property PhpMyAdmin\\SqlParser\\Statements\\SelectStatement\:\:\$group \(array\<PhpMyAdmin\\SqlParser\\Components\\GroupKeyword\>\|null\) does not accept array\<PhpMyAdmin\\SqlParser\\Component\>\|PhpMyAdmin\\SqlParser\\Components\\ArrayObj\|PhpMyAdmin\\SqlParser\\Components\\Expression\|PhpMyAdmin\\SqlParser\\Components\\FunctionCall\|PhpMyAdmin\\SqlParser\\Components\\IntoKeyword\|PhpMyAdmin\\SqlParser\\Components\\Limit\|PhpMyAdmin\\SqlParser\\Components\\OptionsArray\|null\.$#'
			identifier: assign.propertyType
			count: 1
			path: src/Statements/SelectStatement.php

		-
			message: '#^Property PhpMyAdmin\\SqlParser\\Statements\\SelectStatement\:\:\$groupOptions \(PhpMyAdmin\\SqlParser\\Components\\OptionsArray\|null\) does not accept array\<PhpMyAdmin\\SqlParser\\Component\>\|PhpMyAdmin\\SqlParser\\Components\\ArrayObj\|PhpMyAdmin\\SqlParser\\Components\\Expression\|PhpMyAdmin\\SqlParser\\Components\\FunctionCall\|PhpMyAdmin\\SqlParser\\Components\\IntoKeyword\|PhpMyAdmin\\SqlParser\\Components\\Limit\|PhpMyAdmin\\SqlParser\\Components\\OptionsArray\|null\.$#'
			identifier: assign.propertyType
			count: 1
			path: src/Statements/SelectStatement.php

		-
			message: '#^Property PhpMyAdmin\\SqlParser\\Statements\\SelectStatement\:\:\$having \(array\<PhpMyAdmin\\SqlParser\\Components\\Condition\>\|null\) does not accept array\<PhpMyAdmin\\SqlParser\\Component\>\|PhpMyAdmin\\SqlParser\\Components\\ArrayObj\|PhpMyAdmin\\SqlParser\\Components\\Expression\|PhpMyAdmin\\SqlParser\\Components\\FunctionCall\|PhpMyAdmin\\SqlParser\\Components\\IntoKeyword\|PhpMyAdmin\\SqlParser\\Components\\Limit\|PhpMyAdmin\\SqlParser\\Components\\OptionsArray\|null\.$#'
			identifier: assign.propertyType
			count: 1
			path: src/Statements/SelectStatement.php

		-
			message: '#^Property PhpMyAdmin\\SqlParser\\Statements\\SelectStatement\:\:\$indexHints \(array\<PhpMyAdmin\\SqlParser\\Components\\IndexHint\>\|null\) does not accept array\<PhpMyAdmin\\SqlParser\\Component\>\|PhpMyAdmin\\SqlParser\\Components\\ArrayObj\|PhpMyAdmin\\SqlParser\\Components\\Expression\|PhpMyAdmin\\SqlParser\\Components\\FunctionCall\|PhpMyAdmin\\SqlParser\\Components\\IntoKeyword\|PhpMyAdmin\\SqlParser\\Components\\Limit\|PhpMyAdmin\\SqlParser\\Components\\OptionsArray\|null\.$#'
			identifier: assign.propertyType
			count: 1
			path: src/Statements/SelectStatement.php

		-
			message: '#^Property PhpMyAdmin\\SqlParser\\Statements\\SelectStatement\:\:\$into \(PhpMyAdmin\\SqlParser\\Components\\IntoKeyword\|null\) does not accept array\<PhpMyAdmin\\SqlParser\\Component\>\|PhpMyAdmin\\SqlParser\\Components\\ArrayObj\|PhpMyAdmin\\SqlParser\\Components\\Expression\|PhpMyAdmin\\SqlParser\\Components\\FunctionCall\|PhpMyAdmin\\SqlParser\\Components\\IntoKeyword\|PhpMyAdmin\\SqlParser\\Components\\Limit\|PhpMyAdmin\\SqlParser\\Components\\OptionsArray\|null\.$#'
			identifier: assign.propertyType
			count: 1
			path: src/Statements/SelectStatement.php

		-
			message: '#^Property PhpMyAdmin\\SqlParser\\Statements\\SelectStatement\:\:\$join \(array\<PhpMyAdmin\\SqlParser\\Components\\JoinKeyword\>\|null\) does not accept array\<PhpMyAdmin\\SqlParser\\Component\>\|PhpMyAdmin\\SqlParser\\Components\\ArrayObj\|PhpMyAdmin\\SqlParser\\Components\\Expression\|PhpMyAdmin\\SqlParser\\Components\\FunctionCall\|PhpMyAdmin\\SqlParser\\Components\\IntoKeyword\|PhpMyAdmin\\SqlParser\\Components\\Limit\|PhpMyAdmin\\SqlParser\\Components\\OptionsArray\|null\.$#'
			identifier: assign.propertyType
			count: 1
			path: src/Statements/SelectStatement.php

		-
			message: '#^Property PhpMyAdmin\\SqlParser\\Statements\\SelectStatement\:\:\$limit \(PhpMyAdmin\\SqlParser\\Components\\Limit\|null\) does not accept array\<PhpMyAdmin\\SqlParser\\Component\>\|PhpMyAdmin\\SqlParser\\Components\\ArrayObj\|PhpMyAdmin\\SqlParser\\Components\\Expression\|PhpMyAdmin\\SqlParser\\Components\\FunctionCall\|PhpMyAdmin\\SqlParser\\Components\\IntoKeyword\|PhpMyAdmin\\SqlParser\\Components\\Limit\|PhpMyAdmin\\SqlParser\\Components\\OptionsArray\|null\.$#'
			identifier: assign.propertyType
			count: 1
			path: src/Statements/SelectStatement.php

		-
			message: '#^Property PhpMyAdmin\\SqlParser\\Statements\\SelectStatement\:\:\$order \(array\<PhpMyAdmin\\SqlParser\\Components\\OrderKeyword\>\|null\) does not accept array\<PhpMyAdmin\\SqlParser\\Component\>\|PhpMyAdmin\\SqlParser\\Components\\ArrayObj\|PhpMyAdmin\\SqlParser\\Components\\Expression\|PhpMyAdmin\\SqlParser\\Components\\FunctionCall\|PhpMyAdmin\\SqlParser\\Components\\IntoKeyword\|PhpMyAdmin\\SqlParser\\Components\\Limit\|PhpMyAdmin\\SqlParser\\Components\\OptionsArray\|null\.$#'
			identifier: assign.propertyType
			count: 1
			path: src/Statements/SelectStatement.php

		-
			message: '#^Property PhpMyAdmin\\SqlParser\\Statements\\SelectStatement\:\:\$partition \(PhpMyAdmin\\SqlParser\\Components\\ArrayObj\|null\) does not accept array\<PhpMyAdmin\\SqlParser\\Component\>\|PhpMyAdmin\\SqlParser\\Components\\ArrayObj\|PhpMyAdmin\\SqlParser\\Components\\Expression\|PhpMyAdmin\\SqlParser\\Components\\FunctionCall\|PhpMyAdmin\\SqlParser\\Components\\IntoKeyword\|PhpMyAdmin\\SqlParser\\Components\\Limit\|PhpMyAdmin\\SqlParser\\Components\\OptionsArray\|null\.$#'
			identifier: assign.propertyType
			count: 1
			path: src/Statements/SelectStatement.php

		-
			message: '#^Property PhpMyAdmin\\SqlParser\\Statements\\SelectStatement\:\:\$procedure \(PhpMyAdmin\\SqlParser\\Components\\FunctionCall\|null\) does not accept array\<PhpMyAdmin\\SqlParser\\Component\>\|PhpMyAdmin\\SqlParser\\Components\\ArrayObj\|PhpMyAdmin\\SqlParser\\Components\\Expression\|PhpMyAdmin\\SqlParser\\Components\\FunctionCall\|PhpMyAdmin\\SqlParser\\Components\\IntoKeyword\|PhpMyAdmin\\SqlParser\\Components\\Limit\|PhpMyAdmin\\SqlParser\\Components\\OptionsArray\|null\.$#'
			identifier: assign.propertyType
			count: 1
			path: src/Statements/SelectStatement.php

		-
			message: '#^Property PhpMyAdmin\\SqlParser\\Statements\\SelectStatement\:\:\$union \(array\<PhpMyAdmin\\SqlParser\\Statements\\SelectStatement\>\) does not accept array\<PhpMyAdmin\\SqlParser\\Component\>\|PhpMyAdmin\\SqlParser\\Components\\ArrayObj\|PhpMyAdmin\\SqlParser\\Components\\Expression\|PhpMyAdmin\\SqlParser\\Components\\FunctionCall\|PhpMyAdmin\\SqlParser\\Components\\IntoKeyword\|PhpMyAdmin\\SqlParser\\Components\\Limit\|PhpMyAdmin\\SqlParser\\Components\\OptionsArray\|null\.$#'
			identifier: assign.propertyType
			count: 1
			path: src/Statements/SelectStatement.php

		-
			message: '#^Property PhpMyAdmin\\SqlParser\\Statements\\SelectStatement\:\:\$where \(array\<PhpMyAdmin\\SqlParser\\Components\\Condition\>\|null\) does not accept array\<PhpMyAdmin\\SqlParser\\Component\>\|PhpMyAdmin\\SqlParser\\Components\\ArrayObj\|PhpMyAdmin\\SqlParser\\Components\\Expression\|PhpMyAdmin\\SqlParser\\Components\\FunctionCall\|PhpMyAdmin\\SqlParser\\Components\\IntoKeyword\|PhpMyAdmin\\SqlParser\\Components\\Limit\|PhpMyAdmin\\SqlParser\\Components\\OptionsArray\|null\.$#'
			identifier: assign.propertyType
			count: 1
			path: src/Statements/SelectStatement.php

		-
			message: '#^Variable property access on \$this\(PhpMyAdmin\\SqlParser\\Statements\\SelectStatement\)\.$#'
			identifier: property.dynamicName
			count: 1
			path: src/Statements/SelectStatement.php

		-
			message: '#^Cannot call method build\(\) on PhpMyAdmin\\SqlParser\\Components\\OptionsArray\|null\.$#'
			identifier: method.nonObject
			count: 1
			path: src/Statements/SetStatement.php

		-
			message: '#^Parameter \#1 \$component of static method PhpMyAdmin\\SqlParser\\Parsers\\SetOperations\:\:buildAll\(\) expects array\<PhpMyAdmin\\SqlParser\\Components\\SetOperation\>, array\<PhpMyAdmin\\SqlParser\\Components\\SetOperation\>\|null given\.$#'
			identifier: argument.type
			count: 1
			path: src/Statements/SetStatement.php

		-
			message: '#^Argument of an invalid type array\<PhpMyAdmin\\SqlParser\\Statement\>\|null supplied for foreach, only iterables are supported\.$#'
			identifier: foreach.nonIterable
			count: 1
			path: src/Statements/TransactionStatement.php

		-
			message: '#^Cannot call method build\(\) on PhpMyAdmin\\SqlParser\\Components\\OptionsArray\|null\.$#'
			identifier: method.nonObject
			count: 1
			path: src/Statements/TransactionStatement.php

		-
			message: '#^Cannot call method has\(\) on PhpMyAdmin\\SqlParser\\Components\\OptionsArray\|null\.$#'
			identifier: method.nonObject
			count: 4
			path: src/Statements/TransactionStatement.php

		-
			message: '#^Only booleans are allowed in &&, PhpMyAdmin\\SqlParser\\Token\|null given on the left side\.$#'
			identifier: booleanAnd.leftNotBoolean
			count: 4
			path: src/Statements/WithStatement.php

		-
			message: '#^Only booleans are allowed in a negated boolean, int\|false given\.$#'
			identifier: booleanNot.exprNotBoolean
			count: 1
			path: src/Statements/WithStatement.php

		-
			message: '#^Only booleans are allowed in an if condition, PhpMyAdmin\\SqlParser\\Parser\|null given\.$#'
			identifier: if.condNotBoolean
			count: 1
			path: src/Statements/WithStatement.php

		-
			message: '#^Only booleans are allowed in an if condition, PhpMyAdmin\\SqlParser\\Token\|null given\.$#'
			identifier: if.condNotBoolean
			count: 1
			path: src/Statements/WithStatement.php

		-
			message: '#^Parameter \#1 \$name of class PhpMyAdmin\\SqlParser\\Components\\WithKeyword constructor expects string, bool\|float\|int\|string given\.$#'
			identifier: argument.type
			count: 1
			path: src/Statements/WithStatement.php

		-
			message: '#^Construct empty\(\) is not allowed\. Use more strict comparison\.$#'
			identifier: empty.notAllowed
			count: 1
			path: src/Token.php

		-
			message: '#^Only booleans are allowed in a negated boolean, int\<0, 16\> given\.$#'
			identifier: booleanNot.exprNotBoolean
			count: 1
			path: src/Token.php

		-
			message: '#^Only booleans are allowed in a negated boolean, int\<0, 2\> given\.$#'
			identifier: booleanNot.exprNotBoolean
			count: 1
			path: src/Token.php

		-
			message: '#^Only booleans are allowed in an if condition, int\<0, 1\> given\.$#'
			identifier: if.condNotBoolean
			count: 1
			path: src/Token.php

		-
			message: '#^Only booleans are allowed in an if condition, int\<0, 8\> given\.$#'
			identifier: if.condNotBoolean
			count: 1
			path: src/Token.php

		-
			message: '#^Only booleans are allowed in \|\|, int\<0, 2\> given on the right side\.$#'
			identifier: booleanOr.rightNotBoolean
			count: 1
			path: src/Token.php

		-
			message: '#^Only booleans are allowed in \|\|, int\<0, 4\> given on the left side\.$#'
			identifier: booleanOr.leftNotBoolean
			count: 1
			path: src/Token.php

		-
			message: '#^Argument of an invalid type list\<string\>\|false supplied for foreach, only iterables are supported\.$#'
			identifier: foreach.nonIterable
			count: 1
			path: src/Tools/ContextGenerator.php

		-
			message: '#^Offset 1 might not exist on array\{0\?\: string, 1\?\: non\-empty\-string, 2\?\: numeric\-string\}\.$#'
			identifier: offsetAccess.notFound
			count: 1
			path: src/Tools/ContextGenerator.php

		-
			message: '#^Offset 2 might not exist on array\{0\?\: string, 1\?\: non\-empty\-string, 2\?\: numeric\-string\}\.$#'
			identifier: offsetAccess.notFound
			count: 1
			path: src/Tools/ContextGenerator.php

		-
			message: '#^Parameter \#1 \$string of function trim expects string, mixed given\.$#'
			identifier: argument.type
			count: 1
			path: src/Tools/ContextGenerator.php

		-
			message: '#^Parameter \#2 \.\.\.\$arrays of function array_merge expects array, list\<string\>\|false given\.$#'
			identifier: argument.type
			count: 1
			path: src/Tools/ContextGenerator.php

		-
			message: '#^Method PhpMyAdmin\\SqlParser\\Tools\\CustomJsonSerializer\:\:extractObjectData\(\) has parameter \$ref with generic class ReflectionClass but does not specify its types\: T$#'
			identifier: missingType.generics
			count: 1
			path: src/Tools/CustomJsonSerializer.php

		-
			message: '#^Parameter \#3 \$properties \(array\<string\>\) of method PhpMyAdmin\\SqlParser\\Tools\\CustomJsonSerializer\:\:extractObjectData\(\) should be contravariant with parameter \$properties \(array\) of method Zumba\\JsonSerializer\\JsonSerializer\:\:extractObjectData\(\)$#'
			identifier: method.childParameterType
			count: 1
			path: src/Tools/CustomJsonSerializer.php

		-
			message: '#^Variable property access on object\.$#'
			identifier: property.dynamicName
			count: 1
			path: src/Tools/CustomJsonSerializer.php

		-
			message: '#^Argument of an invalid type list\<string\>\|false supplied for foreach, only iterables are supported\.$#'
			identifier: foreach.nonIterable
			count: 1
			path: src/Tools/TestGenerator.php

		-
			message: '#^Binary operation "\." between mixed and ''/'' results in an error\.$#'
			identifier: binaryOp.invalid
			count: 1
			path: src/Tools/TestGenerator.php

		-
			message: '#^Call to function in_array\(\) requires parameter \#3 to be set\.$#'
			identifier: function.strict
			count: 1
			path: src/Tools/TestGenerator.php

		-
			message: '#^Construct empty\(\) is not allowed\. Use more strict comparison\.$#'
			identifier: empty.notAllowed
			count: 4
			path: src/Tools/TestGenerator.php

		-
			message: '#^Parameter \#1 \$directory of function mkdir expects string, string\|null given\.$#'
			identifier: argument.type
			count: 1
			path: src/Tools/TestGenerator.php

		-
			message: '#^Parameter \#1 \$filename of function is_dir expects string, string\|null given\.$#'
			identifier: argument.type
			count: 1
			path: src/Tools/TestGenerator.php

		-
			message: '#^Parameter \#1 \$string of function substr expects string, string\|null given\.$#'
			identifier: argument.type
			count: 1
			path: src/Tools/TestGenerator.php

		-
			message: '#^Parameter \#1 \$offset \(int\) of method PhpMyAdmin\\SqlParser\\UtfString\:\:offsetSet\(\) should be contravariant with parameter \$offset \(int\|null\) of method ArrayAccess\<int,string\>\:\:offsetSet\(\)$#'
			identifier: method.childParameterType
			count: 1
			path: src/UtfString.php

		-
			message: '#^Construct empty\(\) is not allowed\. Use more strict comparison\.$#'
			identifier: empty.notAllowed
			count: 3
			path: src/Utils/BufferedQuery.php

		-
			message: '#^Call to function in_array\(\) requires parameter \#3 to be set\.$#'
			identifier: function.strict
			count: 1
			path: src/Utils/CLI.php

		-
			message: '#^Method PhpMyAdmin\\SqlParser\\Utils\\CLI\:\:getopt\(\) should return array\<string\|false\>\|false but returns \(array\<string, list\<mixed\>\|string\|false\>\|false\)\.$#'
			identifier: return.type
			count: 1
			path: src/Utils/CLI.php

		-
			message: '#^Only booleans are allowed in an if condition, string\|false\|null given\.$#'
			identifier: if.condNotBoolean
			count: 3
			path: src/Utils/CLI.php

		-
			message: '#^Parameter \#1 \$context of static method PhpMyAdmin\\SqlParser\\Context\:\:load\(\) expects string, string\|false given\.$#'
			identifier: argument.type
			count: 1
			path: src/Utils/CLI.php

		-
			message: '#^Parameter \#1 \$query of static method PhpMyAdmin\\SqlParser\\Utils\\Formatter\:\:format\(\) expects string, string\|false given\.$#'
			identifier: argument.type
			count: 1
			path: src/Utils/CLI.php

		-
			message: '#^Parameter \#1 \$str of class PhpMyAdmin\\SqlParser\\Lexer constructor expects PhpMyAdmin\\SqlParser\\UtfString\|string, string\|false given\.$#'
			identifier: argument.type
			count: 2
			path: src/Utils/CLI.php

		-
			message: '#^Using nullsafe property access "\?\-\>token" on left side of \?\? is unnecessary\. Use \-\> instead\.$#'
			identifier: nullsafe.neverNull
			count: 1
			path: src/Utils/Error.php

		-
			message: '#^Argument of an invalid type array\<int, array\<string, int\|string\>\>\|bool\|string supplied for foreach, only iterables are supported\.$#'
			identifier: foreach.nonIterable
			count: 1
			path: src/Utils/Formatter.php

		-
			message: '#^Binary operation "&" between int and int\|string results in an error\.$#'
			identifier: binaryOp.invalid
			count: 1
			path: src/Utils/Formatter.php

		-
			message: '#^Binary operation "&\=" between array\<int, array\<string, int\|string\>\>\|bool\|string\|null and array\<int, array\<string, int\|string\>\>\|bool\|string\|null results in an error\.$#'
			identifier: assignOp.invalid
			count: 1
			path: src/Utils/Formatter.php

		-
			message: '#^Binary operation "\." between array\<int, array\<string, int\|string\>\>\|bool\|string and string results in an error\.$#'
			identifier: binaryOp.invalid
			count: 1
			path: src/Utils/Formatter.php

		-
			message: '#^Binary operation "\.\=" between string and mixed results in an error\.$#'
			identifier: assignOp.invalid
			count: 1
			path: src/Utils/Formatter.php

		-
			message: '#^Call to function in_array\(\) requires parameter \#3 to be set\.$#'
			identifier: function.strict
			count: 1
			path: src/Utils/Formatter.php

		-
			message: '#^Construct empty\(\) is not allowed\. Use more strict comparison\.$#'
			identifier: empty.notAllowed
			count: 4
			path: src/Utils/Formatter.php

		-
			message: '#^Method PhpMyAdmin\\SqlParser\\Utils\\Formatter\:\:getMergedOptions\(\) should return array\<string, array\<int, array\<string, int\|string\>\>\|bool\|string\> but returns array\<string, mixed\>\.$#'
			identifier: return.type
			count: 1
			path: src/Utils/Formatter.php

		-
			message: '#^Method PhpMyAdmin\\SqlParser\\Utils\\Formatter\:\:toString\(\) should return string but returns mixed\.$#'
			identifier: return.type
			count: 1
			path: src/Utils/Formatter.php

		-
			message: '#^Only booleans are allowed in &&, array\<int, array\<string, int\|string\>\>\|bool\|string given on the left side\.$#'
			identifier: booleanAnd.leftNotBoolean
			count: 2
			path: src/Utils/Formatter.php

		-
			message: '#^Only booleans are allowed in &&, array\<int, array\<string, int\|string\>\>\|bool\|string given on the right side\.$#'
			identifier: booleanAnd.rightNotBoolean
			count: 2
			path: src/Utils/Formatter.php

		-
			message: '#^Only booleans are allowed in an if condition, bool\|int given\.$#'
			identifier: if.condNotBoolean
			count: 1
			path: src/Utils/Formatter.php

		-
			message: '#^Only booleans are allowed in \|\|, array\<int, array\<string, int\|string\>\>\|bool\|string given on the right side\.$#'
			identifier: booleanOr.rightNotBoolean
			count: 1
			path: src/Utils/Formatter.php

		-
			message: '#^Only booleans are allowed in \|\|, int\<0, 32\> given on the right side\.$#'
			identifier: booleanOr.rightNotBoolean
			count: 1
			path: src/Utils/Formatter.php

		-
			message: '#^Only numeric types are allowed in pre\-increment, int\<0, max\>\|null given\.$#'
			identifier: preInc.nonNumeric
			count: 3
			path: src/Utils/Formatter.php

		-
			message: '#^Parameter \#1 \$string of function htmlspecialchars expects string, mixed given\.$#'
			identifier: argument.type
			count: 2
			path: src/Utils/Formatter.php

		-
			message: '#^Parameter \#1 \$string of function str_repeat expects string, array\<int, array\<string, int\|string\>\>\|bool\|string given\.$#'
			identifier: argument.type
			count: 1
			path: src/Utils/Formatter.php

		-
			message: '#^Parameter \#1 \$string of method PhpMyAdmin\\SqlParser\\Utils\\Formatter\:\:escapeConsole\(\) expects string, mixed given\.$#'
			identifier: argument.type
			count: 4
			path: src/Utils/Formatter.php

		-
			message: '#^Parameter \#2 \$newFormats of static method PhpMyAdmin\\SqlParser\\Utils\\Formatter\:\:mergeFormats\(\) expects array\<int, array\<string, int\|string\>\>, array\<int, array\<string, int\|string\>\>\|bool\|string given\.$#'
			identifier: argument.type
			count: 1
			path: src/Utils/Formatter.php

		-
			message: '#^Trying to invoke int\<min, \-1\>\|int\<1, max\>\|non\-falsy\-string but it might not be a callable\.$#'
			identifier: callable.nonCallable
			count: 1
			path: src/Utils/Formatter.php

		-
			message: '''
				#^Access to deprecated property \$isDelete of class PhpMyAdmin\\SqlParser\\Utils\\StatementFlags\:
				Use \{@see self\:\:\$queryType\} instead\.$#
			'''
			identifier: property.deprecated
			count: 1
			path: src/Utils/Query.php

		-
			message: '''
				#^Access to deprecated property \$isExplain of class PhpMyAdmin\\SqlParser\\Utils\\StatementFlags\:
				Use \{@see self\:\:\$queryType\} instead\.$#
			'''
			identifier: property.deprecated
			count: 1
			path: src/Utils/Query.php

		-
			message: '''
				#^Access to deprecated property \$isReplace of class PhpMyAdmin\\SqlParser\\Utils\\StatementFlags\:
				Use \{@see self\:\:\$queryType\} instead\.$#
			'''
			identifier: property.deprecated
			count: 1
			path: src/Utils/Query.php

		-
			message: '''
				#^Access to deprecated property \$isSelect of class PhpMyAdmin\\SqlParser\\Utils\\StatementFlags\:
				Use \{@see self\:\:\$queryType\} instead\.$#
			'''
			identifier: property.deprecated
			count: 1
			path: src/Utils/Query.php

		-
			message: '''
				#^Access to deprecated property \$isShow of class PhpMyAdmin\\SqlParser\\Utils\\StatementFlags\:
				Use \{@see self\:\:\$queryType\} instead\.$#
			'''
			identifier: property.deprecated
			count: 1
			path: src/Utils/Query.php

		-
			message: '#^Argument of an invalid type array\<PhpMyAdmin\\SqlParser\\Components\\Expression\|string\|null\>\|null supplied for foreach, only iterables are supported\.$#'
			identifier: foreach.nonIterable
			count: 1
			path: src/Utils/Query.php

		-
			message: '#^Argument of an invalid type array\<PhpMyAdmin\\SqlParser\\Components\\RenameOperation\>\|null supplied for foreach, only iterables are supported\.$#'
			identifier: foreach.nonIterable
			count: 1
			path: src/Utils/Query.php

		-
			message: '#^Call to function in_array\(\) requires parameter \#3 to be set\.$#'
			identifier: function.strict
			count: 2
			path: src/Utils/Query.php

		-
			message: '#^Cannot access property \$dest on PhpMyAdmin\\SqlParser\\Components\\IntoKeyword\|null\.$#'
			identifier: property.nonObject
			count: 1
			path: src/Utils/Query.php

		-
			message: '#^Cannot access property \$keyword on PhpMyAdmin\\SqlParser\\Token\|null\.$#'
			identifier: property.nonObject
			count: 1
			path: src/Utils/Query.php

		-
			message: '#^Cannot call method has\(\) on PhpMyAdmin\\SqlParser\\Components\\OptionsArray\|null\.$#'
			identifier: method.nonObject
			count: 4
			path: src/Utils/Query.php

		-
			message: '#^Construct empty\(\) is not allowed\. Use more strict comparison\.$#'
			identifier: empty.notAllowed
			count: 14
			path: src/Utils/Query.php

		-
			message: '#^Method PhpMyAdmin\\SqlParser\\Utils\\Query\:\:getClauseStartOffset\(\) should return int but returns int\|null\.$#'
			identifier: return.type
			count: 1
			path: src/Utils/Query.php

		-
			message: '#^Only numeric types are allowed in pre\-increment, int\|null given\.$#'
			identifier: preInc.nonNumeric
			count: 2
			path: src/Utils/Query.php

		-
			message: '#^Cannot call method has\(\) on PhpMyAdmin\\SqlParser\\Components\\OptionsArray\|null\.$#'
			identifier: method.nonObject
			count: 1
			path: src/Utils/Table.php

		-
			message: '#^Construct empty\(\) is not allowed\. Use more strict comparison\.$#'
			identifier: empty.notAllowed
			count: 2
			path: src/Utils/Table.php

		-
			message: '#^Method PhpMyAdmin\\SqlParser\\Utils\\Table\:\:getFields\(\) should return array\<string, array\{type\: string, timestamp_not_null\: bool, default_value\?\: mixed, default_current_timestamp\?\: true, on_update_current_timestamp\?\: true, expr\?\: mixed\}\> but returns array\<string, array\{type\: string\|null, timestamp_not_null\: bool, default_value\?\: PhpMyAdmin\\SqlParser\\Components\\Expression\|non\-empty\-string, default_current_timestamp\?\: true, on_update_current_timestamp\?\: true, expr\?\: PhpMyAdmin\\SqlParser\\Components\\Expression\|non\-empty\-string\}\>\.$#'
			identifier: return.type
			count: 1
			path: src/Utils/Table.php

		-
			message: '#^Only booleans are allowed in a negated boolean, PhpMyAdmin\\SqlParser\\Components\\OptionsArray\|null given\.$#'
			identifier: booleanNot.exprNotBoolean
			count: 1
			path: src/Utils/Table.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertEquals\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 13
			path: tests/Builder/AlterStatementTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertEquals\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 11
			path: tests/Builder/CallStatementTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertEquals\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 34
			path: tests/Builder/CreateStatementTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertFalse\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 4
			path: tests/Builder/CreateStatementTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertInstanceOf\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 5
			path: tests/Builder/CreateStatementTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertIsArray\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 2
			path: tests/Builder/CreateStatementTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertNotNull\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 8
			path: tests/Builder/CreateStatementTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertSame\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 13
			path: tests/Builder/CreateStatementTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertEquals\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 10
			path: tests/Builder/DeleteStatementTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertEquals\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 10
			path: tests/Builder/ExplainStatementTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertEquals\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 6
			path: tests/Builder/InsertStatementTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertEquals\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 6
			path: tests/Builder/LoadStatementTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertEquals\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 7
			path: tests/Builder/LockStatementTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertEquals\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 2
			path: tests/Builder/PurgeStatementTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertEquals\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 3
			path: tests/Builder/RenameStatementTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertEquals\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 4
			path: tests/Builder/ReplaceStatementTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertEquals\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 28
			path: tests/Builder/SelectStatementTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertEquals\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 15
			path: tests/Builder/SetStatementTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertEquals\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 2
			path: tests/Builder/StatementTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertInstanceOf\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 1
			path: tests/Builder/StatementTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertEquals\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 1
			path: tests/Builder/TransactionStatementTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertEquals\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 3
			path: tests/Builder/TruncateStatementTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertEquals\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 3
			path: tests/Builder/UpdateStatementTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertCount\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 6
			path: tests/Components/Array2dTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertEquals\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 8
			path: tests/Components/Array2dTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertEquals\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 4
			path: tests/Components/ArrayObjTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertInstanceOf\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 2
			path: tests/Components/ArrayObjTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertIsArray\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 1
			path: tests/Components/ArrayObjTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertEquals\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 9
			path: tests/Components/CaseExpressionTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertEquals\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 5
			path: tests/Components/ConditionTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertCount\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 1
			path: tests/Components/CreateDefinitionTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertEquals\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 15
			path: tests/Components/CreateDefinitionTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertInstanceOf\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 4
			path: tests/Components/CreateDefinitionTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertIsArray\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 4
			path: tests/Components/CreateDefinitionTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertNotNull\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 3
			path: tests/Components/CreateDefinitionTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertTrue\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 2
			path: tests/Components/CreateDefinitionTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertCount\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 3
			path: tests/Components/ExpressionArrayTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertEquals\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 4
			path: tests/Components/ExpressionArrayTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertEquals\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 10
			path: tests/Components/ExpressionTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertNotNull\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 6
			path: tests/Components/ExpressionTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertEquals\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 2
			path: tests/Components/FunctionCallTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertSame\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 2
			path: tests/Components/GroupKeywordTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertEquals\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 6
			path: tests/Components/IntoKeywordTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertCount\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 2
			path: tests/Components/JoinKeywordTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertEquals\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 4
			path: tests/Components/JoinKeywordTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertNotNull\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 3
			path: tests/Components/JoinKeywordTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertNull\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 3
			path: tests/Components/JoinKeywordTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertEquals\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 42
			path: tests/Components/KeyTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertNull\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 11
			path: tests/Components/KeyTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertSame\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 27
			path: tests/Components/KeyTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertEquals\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 2
			path: tests/Components/LimitTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertEquals\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 7
			path: tests/Components/LockExpressionTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertNotNull\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 2
			path: tests/Components/LockExpressionTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertEquals\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 9
			path: tests/Components/OptionsArrayTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertFalse\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 3
			path: tests/Components/OptionsArrayTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertInstanceOf\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 1
			path: tests/Components/OptionsArrayTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertTrue\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 3
			path: tests/Components/OptionsArrayTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertEquals\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 1
			path: tests/Components/OrderKeywordTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertEquals\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 3
			path: tests/Components/ParameterDefinitionTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertEquals\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 6
			path: tests/Components/PartitionDefinitionTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertFalse\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 2
			path: tests/Components/PartitionDefinitionTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertInstanceOf\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 2
			path: tests/Components/PartitionDefinitionTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertEquals\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 3
			path: tests/Components/ReferenceTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertNotNull\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 1
			path: tests/Components/ReferenceTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertEquals\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 1
			path: tests/Components/RenameOperationTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertArrayHasKey\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 2
			path: tests/Lexer/ContextTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertArrayNotHasKey\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 2
			path: tests/Lexer/ContextTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertEquals\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 14
			path: tests/Lexer/ContextTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertFalse\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 5
			path: tests/Lexer/ContextTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertSame\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 7
			path: tests/Lexer/ContextTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertTrue\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 5
			path: tests/Lexer/ContextTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertEquals\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 28
			path: tests/Lexer/IsMethodsTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertFalse\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 8
			path: tests/Lexer/IsMethodsTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertNull\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 10
			path: tests/Lexer/IsMethodsTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertTrue\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 23
			path: tests/Lexer/IsMethodsTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertEquals\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 1
			path: tests/Lexer/LexerTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertEquals\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 18
			path: tests/Lexer/TokenTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertFalse\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 1
			path: tests/Lexer/TokenTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertTrue\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 1
			path: tests/Lexer/TokenTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertArrayHasKey\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 1
			path: tests/Lexer/TokensListTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertArrayNotHasKey\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 2
			path: tests/Lexer/TokensListTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertEquals\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 26
			path: tests/Lexer/TokensListTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertNull\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 8
			path: tests/Lexer/TokensListTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertSame\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 9
			path: tests/Lexer/TokensListTest.php

		-
			message: '#^Parameter \#2 \$array of method PHPUnit\\Framework\\Assert\:\:assertArrayHasKey\(\) expects array\<mixed\>\|ArrayAccess\<\(int\|string\), mixed\>, PhpMyAdmin\\SqlParser\\TokensList given\.$#'
			identifier: argument.type
			count: 1
			path: tests/Lexer/TokensListTest.php

		-
			message: '#^Parameter \#2 \$array of method PHPUnit\\Framework\\Assert\:\:assertArrayNotHasKey\(\) expects array\<mixed\>\|ArrayAccess\<\(int\|string\), mixed\>, PhpMyAdmin\\SqlParser\\TokensList given\.$#'
			identifier: argument.type
			count: 2
			path: tests/Lexer/TokensListTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertArrayHasKey\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 1
			path: tests/Misc/UtfStringTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertArrayNotHasKey\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 2
			path: tests/Misc/UtfStringTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertEquals\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 7
			path: tests/Misc/UtfStringTest.php

		-
			message: '#^Parameter \#2 \$array of method PHPUnit\\Framework\\Assert\:\:assertArrayHasKey\(\) expects array\<mixed\>\|ArrayAccess\<\(int\|string\), mixed\>, PhpMyAdmin\\SqlParser\\UtfString given\.$#'
			identifier: argument.type
			count: 1
			path: tests/Misc/UtfStringTest.php

		-
			message: '#^Parameter \#2 \$array of method PHPUnit\\Framework\\Assert\:\:assertArrayNotHasKey\(\) expects array\<mixed\>\|ArrayAccess\<\(int\|string\), mixed\>, PhpMyAdmin\\SqlParser\\UtfString given\.$#'
			identifier: argument.type
			count: 2
			path: tests/Misc/UtfStringTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertCount\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 1
			path: tests/Parser/KillStatementTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertEquals\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 1
			path: tests/Parser/KillStatementTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertInstanceOf\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 1
			path: tests/Parser/KillStatementTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertNotNull\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 1
			path: tests/Parser/LoadStatementTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertTrue\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 1
			path: tests/Parser/LoadStatementTest.php

		-
			message: '#^Call to method PHPUnit\\Framework\\Assert\:\:assertIsString\(\) with string will always evaluate to true\.$#'
			identifier: method.alreadyNarrowedType
			count: 1
			path: tests/Parser/ParserLongExportsTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertEquals\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 2
			path: tests/Parser/ParserLongExportsTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertIsString\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 1
			path: tests/Parser/ParserLongExportsTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertNotNull\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 1
			path: tests/Parser/ParserLongExportsTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertEquals\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 3
			path: tests/Parser/ParserTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertEquals\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 1
			path: tests/Parser/SelectStatementTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertNotNull\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 1
			path: tests/Parser/SelectStatementTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertEquals\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 1
			path: tests/Parser/TransactionStatementTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertCount\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 14
			path: tests/Parser/WithStatementTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertEquals\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 5
			path: tests/Parser/WithStatementTest.php

		-
			message: '#^Construct empty\(\) is not allowed\. Use more strict comparison\.$#'
			identifier: empty.notAllowed
			count: 1
			path: tests/TestCase.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertArrayHasKey\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 6
			path: tests/TestCase.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertEquals\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 4
			path: tests/TestCase.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertInstanceOf\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 2
			path: tests/TestCase.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertIsArray\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 2
			path: tests/TestCase.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertIsList\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 2
			path: tests/TestCase.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertIsString\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 3
			path: tests/TestCase.php

		-
			message: '#^Method PhpMyAdmin\\SqlParser\\Tests\\TestCase\:\:getData\(\) should return array\{query\: string, lexer\: PhpMyAdmin\\SqlParser\\Lexer, parser\: PhpMyAdmin\\SqlParser\\Parser\|null, errors\: array\{lexer\: list\<array\{string, string, int, int\}\>, parser\: list\<array\{string, PhpMyAdmin\\SqlParser\\Token, int\}\>\}\} but returns non\-empty\-array\.$#'
			identifier: return.type
			count: 1
			path: tests/TestCase.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertEquals\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 8
			path: tests/Tools/ContextGeneratorTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertEquals\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 1
			path: tests/Utils/BufferedQueryTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertEquals\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 7
			path: tests/Utils/CLITest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertSame\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 1
			path: tests/Utils/CLITest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertEquals\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 3
			path: tests/Utils/ErrorTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertSame\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 1
			path: tests/Utils/ErrorTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertEquals\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 4
			path: tests/Utils/FormatterTest.php

		-
			message: '''
				#^Access to deprecated property \$isDelete of class PhpMyAdmin\\SqlParser\\Utils\\StatementFlags\:
				Use \{@see self\:\:\$queryType\} instead\.$#
			'''
			identifier: property.deprecated
			count: 1
			path: tests/Utils/QueryTest.php

		-
			message: '''
				#^Access to deprecated property \$isExplain of class PhpMyAdmin\\SqlParser\\Utils\\StatementFlags\:
				Use \{@see self\:\:\$queryType\} instead\.$#
			'''
			identifier: property.deprecated
			count: 1
			path: tests/Utils/QueryTest.php

		-
			message: '''
				#^Access to deprecated property \$isReplace of class PhpMyAdmin\\SqlParser\\Utils\\StatementFlags\:
				Use \{@see self\:\:\$queryType\} instead\.$#
			'''
			identifier: property.deprecated
			count: 1
			path: tests/Utils/QueryTest.php

		-
			message: '''
				#^Access to deprecated property \$isSelect of class PhpMyAdmin\\SqlParser\\Utils\\StatementFlags\:
				Use \{@see self\:\:\$queryType\} instead\.$#
			'''
			identifier: property.deprecated
			count: 1
			path: tests/Utils/QueryTest.php

		-
			message: '''
				#^Access to deprecated property \$isShow of class PhpMyAdmin\\SqlParser\\Utils\\StatementFlags\:
				Use \{@see self\:\:\$queryType\} instead\.$#
			'''
			identifier: property.deprecated
			count: 1
			path: tests/Utils/QueryTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertEquals\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 25
			path: tests/Utils/QueryTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertNotNull\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 9
			path: tests/Utils/QueryTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertNull\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 2
			path: tests/Utils/QueryTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertSame\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 3
			path: tests/Utils/QueryTest.php

		-
			message: '#^Parameter \#2 \$list of static method PhpMyAdmin\\SqlParser\\Utils\\Query\:\:replaceClause\(\) expects PhpMyAdmin\\SqlParser\\TokensList, PhpMyAdmin\\SqlParser\\TokensList\|null given\.$#'
			identifier: argument.type
			count: 1
			path: tests/Utils/QueryTest.php

		-
			message: '#^Variable property access on PhpMyAdmin\\SqlParser\\Utils\\StatementFlags\.$#'
			identifier: property.dynamicName
			count: 1
			path: tests/Utils/QueryTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertEquals\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 2
			path: tests/Utils/TableTest.php

		-
			message: '#^Dynamic call to static method PHPUnit\\Framework\\Assert\:\:assertInstanceOf\(\)\.$#'
			identifier: staticMethod.dynamicCall
			count: 2
			path: tests/Utils/TableTest.php

		-
			message: '#^Construct empty\(\) is not allowed\. Use more strict comparison\.$#'
			identifier: empty.notAllowed
			count: 1
			path: tools/TestGenerator.php

