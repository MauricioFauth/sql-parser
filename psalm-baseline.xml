<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="5.20.0@3f284e96c9d9be6fe6b15c79416e1d1903dcfef4">
  <file src="src/Components/AlterOperation.php">
    <PossiblyNullPropertyAssignmentValue>
      <code>$options</code>
    </PossiblyNullPropertyAssignmentValue>
    <PropertyTypeCoercion>
      <code><![CDATA[ArrayObj::parse(
                        $parser,
                        $list,
                        ['type' => PartitionDefinition::class],
                    )]]></code>
    </PropertyTypeCoercion>
    <RedundantCondition>
      <code>$partitionState === 2</code>
      <code>$state === 3</code>
    </RedundantCondition>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[empty($ret->field)]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="src/Components/Array2d.php">
    <RedundantCondition>
      <code>$state === 1</code>
    </RedundantCondition>
  </file>
  <file src="src/Components/ArrayObj.php">
    <MixedAssignment>
      <code>$ret[]</code>
    </MixedAssignment>
    <MixedMethodCall>
      <code><![CDATA[$options['type']::parse(
                    $parser,
                    $list,
                    empty($options['typeOptions']) ? [] : $options['typeOptions'],
                )]]></code>
    </MixedMethodCall>
    <MixedOperand>
      <code><![CDATA[$token->value]]></code>
    </MixedOperand>
    <MixedReturnTypeCoercion>
      <code>$ret</code>
      <code>ArrayObj|Component[]</code>
    </MixedReturnTypeCoercion>
    <PossiblyInvalidPropertyAssignment>
      <code>$ret</code>
      <code>$ret</code>
      <code>$ret</code>
      <code>$ret</code>
    </PossiblyInvalidPropertyAssignment>
    <PossiblyInvalidPropertyFetch>
      <code><![CDATA[$ret->raw]]></code>
      <code><![CDATA[$ret->raw]]></code>
      <code><![CDATA[$ret->values]]></code>
      <code><![CDATA[$ret->values]]></code>
    </PossiblyInvalidPropertyFetch>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[empty($options['typeOptions'])]]></code>
    </RiskyTruthyFalsyComparison>
    <UndefinedMethod>
      <code>$ret</code>
    </UndefinedMethod>
  </file>
  <file src="src/Components/CaseExpression.php">
    <InvalidOperand>
      <code><![CDATA[! $token->flags]]></code>
    </InvalidOperand>
    <InvalidPropertyAssignmentValue>
      <code><![CDATA[$ret->compareValues]]></code>
      <code><![CDATA[$ret->results]]></code>
      <code><![CDATA[$ret->results]]></code>
    </InvalidPropertyAssignmentValue>
    <MixedAssignment>
      <code><![CDATA[$ret->alias]]></code>
    </MixedAssignment>
    <MixedOperand>
      <code><![CDATA[$token->value]]></code>
    </MixedOperand>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[! $token->flags & Token::FLAG_SYMBOL_VARIABLE]]></code>
      <code><![CDATA[$this->alias]]></code>
      <code><![CDATA[empty($ret->alias)]]></code>
      <code><![CDATA[empty($ret->alias)]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="src/Components/Condition.php">
    <PossiblyUnusedProperty>
      <code>$isOperator</code>
    </PossiblyUnusedProperty>
  </file>
  <file src="src/Components/CreateDefinition.php">
    <MixedAssignment>
      <code><![CDATA[$expr->name]]></code>
      <code><![CDATA[$expr->name]]></code>
    </MixedAssignment>
    <PossiblyNullOperand>
      <code><![CDATA[$this->options]]></code>
    </PossiblyNullOperand>
    <RedundantCondition>
      <code>$state === 5</code>
    </RedundantCondition>
  </file>
  <file src="src/Components/DataType.php">
    <PossiblyInvalidPropertyFetch>
      <code><![CDATA[$parameters->raw]]></code>
      <code><![CDATA[$parameters->values]]></code>
    </PossiblyInvalidPropertyFetch>
    <PossiblyNullPropertyAssignmentValue>
      <code>$name</code>
      <code>$options</code>
    </PossiblyNullPropertyAssignmentValue>
    <RedundantCondition>
      <code>$state === 1</code>
    </RedundantCondition>
  </file>
  <file src="src/Components/Expression.php">
    <MixedArrayOffset>
      <code><![CDATA[Parser::STATEMENT_PARSERS[$token->keyword]]]></code>
    </MixedArrayOffset>
    <MixedAssignment>
      <code>$field</code>
      <code><![CDATA[$options['field']]]></code>
      <code><![CDATA[$ret->alias]]></code>
      <code><![CDATA[$ret->alias]]></code>
      <code><![CDATA[$ret->alias]]></code>
      <code><![CDATA[$ret->subquery]]></code>
    </MixedAssignment>
    <PossiblyNullOperand>
      <code><![CDATA[$ret->expr]]></code>
      <code><![CDATA[$ret->expr]]></code>
      <code><![CDATA[$ret->expr]]></code>
      <code><![CDATA[$ret->expr]]></code>
      <code><![CDATA[$ret->expr]]></code>
      <code><![CDATA[$ret->expr]]></code>
    </PossiblyNullOperand>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[empty($ret->alias)]]></code>
      <code><![CDATA[empty($ret->alias)]]></code>
      <code><![CDATA[empty($ret->alias)]]></code>
      <code><![CDATA[empty($ret->database)]]></code>
      <code><![CDATA[empty($ret->subquery)]]></code>
      <code><![CDATA[empty($this->alias)]]></code>
    </RiskyTruthyFalsyComparison>
    <TypeDoesNotContainType>
      <code><![CDATA[$brackets < 0]]></code>
    </TypeDoesNotContainType>
  </file>
  <file src="src/Components/ExpressionArray.php">
    <InvalidReturnStatement>
      <code>$ret</code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code>Expression[]</code>
    </InvalidReturnType>
    <PossiblyNullArgument>
      <code>$expr</code>
      <code>$expr</code>
      <code>$expr</code>
    </PossiblyNullArgument>
    <RedundantCondition>
      <code>$state === 1</code>
    </RedundantCondition>
  </file>
  <file src="src/Components/FunctionCall.php">
    <MixedOperand>
      <code><![CDATA[$token->value]]></code>
    </MixedOperand>
    <PossiblyInvalidPropertyAssignmentValue>
      <code>ArrayObj::parse($parser, $list)</code>
    </PossiblyInvalidPropertyAssignmentValue>
    <PossiblyNullOperand>
      <code><![CDATA[$this->name]]></code>
      <code><![CDATA[$this->parameters]]></code>
    </PossiblyNullOperand>
    <RedundantCondition>
      <code>$state === 1</code>
    </RedundantCondition>
  </file>
  <file src="src/Components/GroupKeyword.php">
    <PossiblyNullPropertyAssignmentValue>
      <code>$expr</code>
      <code>Expression::parse($parser, $list)</code>
    </PossiblyNullPropertyAssignmentValue>
    <PossiblyUnusedProperty>
      <code>$type</code>
    </PossiblyUnusedProperty>
    <RedundantCondition>
      <code>$state === 1</code>
    </RedundantCondition>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[! empty($expr->expr)]]></code>
      <code><![CDATA[! empty($expr->expr)]]></code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Components/IndexHint.php">
    <MixedAssignment>
      <code><![CDATA[$expr->type]]></code>
    </MixedAssignment>
    <PossiblyNullOperand>
      <code><![CDATA[$this->indexOrKey]]></code>
      <code><![CDATA[$this->type]]></code>
    </PossiblyNullOperand>
  </file>
  <file src="src/Components/IntoKeyword.php">
    <MixedArgument>
      <code><![CDATA[$token->keyword]]></code>
      <code><![CDATA[$token->keyword]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$ret->dest]]></code>
    </MixedAssignment>
    <PossiblyInvalidPropertyFetch>
      <code><![CDATA[ArrayObj::parse($parser, $list)->values]]></code>
    </PossiblyInvalidPropertyFetch>
    <PossiblyNullOperand>
      <code><![CDATA[$this->dest]]></code>
    </PossiblyNullOperand>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[empty($this->columns)]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="src/Components/JoinKeyword.php">
    <DocblockTypeContradiction>
      <code><![CDATA['']]></code>
    </DocblockTypeContradiction>
    <MixedArrayOffset>
      <code><![CDATA[self::JOINS[$token->keyword]]]></code>
      <code><![CDATA[self::JOINS[$token->keyword]]]></code>
    </MixedArrayOffset>
    <PossiblyFalseOperand>
      <code><![CDATA[array_search($c->type, self::JOINS)]]></code>
    </PossiblyFalseOperand>
    <PossiblyInvalidPropertyAssignmentValue>
      <code>ArrayObj::parse($parser, $list)</code>
    </PossiblyInvalidPropertyAssignmentValue>
    <PossiblyNullPropertyAssignmentValue>
      <code>$expr</code>
      <code>$on</code>
      <code>$type</code>
      <code>$using</code>
      <code><![CDATA[Expression::parse($parser, $list, ['field' => 'table'])]]></code>
    </PossiblyNullPropertyAssignmentValue>
    <RedundantCondition>
      <code>$state === 4</code>
    </RedundantCondition>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[! empty($c->using)]]></code>
    </RedundantConditionGivenDocblockType>
    <TypeDoesNotContainType>
      <code><![CDATA[empty(self::JOINS[$token->keyword])]]></code>
      <code><![CDATA[empty(self::JOINS[$token->keyword])]]></code>
    </TypeDoesNotContainType>
  </file>
  <file src="src/Components/Key.php">
    <MixedAssignment>
      <code><![CDATA[$lastColumn['length']]]></code>
      <code><![CDATA[$lastColumn['name']]]></code>
      <code><![CDATA[$ret->name]]></code>
      <code><![CDATA[$ret->type]]></code>
    </MixedAssignment>
    <MixedPropertyTypeCoercion>
      <code><![CDATA[$ret->columns]]></code>
    </MixedPropertyTypeCoercion>
    <PossiblyNullOperand>
      <code><![CDATA[$ret->expr]]></code>
      <code><![CDATA[$this->options]]></code>
      <code><![CDATA[$this->options]]></code>
      <code><![CDATA[Expression::parse($parser, $list, ['parenthesesDelimited' => true])]]></code>
    </PossiblyNullOperand>
    <PossiblyNullPropertyAssignmentValue>
      <code>$name</code>
      <code>$type</code>
    </PossiblyNullPropertyAssignmentValue>
    <RedundantCondition>
      <code>$state === 5</code>
    </RedundantCondition>
  </file>
  <file src="src/Components/Limit.php">
    <MixedAssignment>
      <code><![CDATA[$ret->offset]]></code>
      <code><![CDATA[$ret->rowCount]]></code>
    </MixedAssignment>
  </file>
  <file src="src/Components/LockExpression.php">
    <MissingConstructor>
      <code>$table</code>
      <code>$type</code>
    </MissingConstructor>
    <PossiblyNullPropertyAssignmentValue>
      <code><![CDATA[Expression::parse($parser, $list, ['parseField' => 'table'])]]></code>
    </PossiblyNullPropertyAssignmentValue>
  </file>
  <file src="src/Components/OptionsArray.php">
    <MixedArgument>
      <code>$option</code>
      <code>$option</code>
      <code><![CDATA[$option['name']]]></code>
      <code><![CDATA[$option['name']]]></code>
      <code><![CDATA[$ret->options[$lastOptionId]['name']]]></code>
      <code>empty($lastOption[2]) ? [] : $lastOption[2]</code>
      <code><![CDATA[is_array($ret->options[$lastOptionId])
                            ? $ret->options[$lastOptionId]['name']
                            : $ret->options[$lastOptionId]]]></code>
    </MixedArgument>
    <MixedArgumentTypeCoercion>
      <code>$options</code>
    </MixedArgumentTypeCoercion>
    <MixedArrayAccess>
      <code>$lastOption[1]</code>
      <code>$lastOption[1]</code>
      <code>$lastOption[2]</code>
      <code><![CDATA[$ret->options[$lastOptionId]['expr']]]></code>
      <code><![CDATA[$ret->options[$lastOptionId]['name']]]></code>
      <code><![CDATA[$ret->options[$lastOptionId]['value']]]></code>
    </MixedArrayAccess>
    <MixedArrayAssignment>
      <code><![CDATA[$ret->options[$lastOptionId]['equals']]]></code>
      <code><![CDATA[$ret->options[$lastOptionId]['expr']]]></code>
      <code><![CDATA[$ret->options[$lastOptionId]['expr']]]></code>
      <code><![CDATA[$ret->options[$lastOptionId]['value']]]></code>
      <code><![CDATA[$ret->options[$lastOptionId]['value']]]></code>
    </MixedArrayAssignment>
    <MixedArrayOffset>
      <code><![CDATA[$ret->options[$lastOptionId]]]></code>
      <code><![CDATA[$ret->options[$lastOptionId]]]></code>
      <code><![CDATA[$ret->options[$lastOptionId]]]></code>
      <code><![CDATA[$ret->options[$lastOptionId]]]></code>
      <code><![CDATA[$ret->options[$lastOptionId]]]></code>
      <code><![CDATA[$ret->options[$lastOptionId]]]></code>
      <code><![CDATA[$ret->options[$lastOptionId]]]></code>
      <code><![CDATA[$ret->options[$lastOptionId]]]></code>
      <code><![CDATA[$ret->options[$lastOptionId]]]></code>
      <code><![CDATA[$ret->options[$lastOptionId]]]></code>
      <code><![CDATA[$ret->options[$lastOptionId]]]></code>
    </MixedArrayOffset>
    <MixedArrayTypeCoercion>
      <code><![CDATA[$ret->options[$lastOptionId]]]></code>
      <code><![CDATA[$ret->options[$lastOptionId]]]></code>
    </MixedArrayTypeCoercion>
    <MixedAssignment>
      <code>$lastOption</code>
      <code>$lastOptionId</code>
      <code>$option</code>
      <code>$option</code>
      <code>$option</code>
      <code>$options[]</code>
    </MixedAssignment>
    <MixedOperand>
      <code><![CDATA[! empty($option['expr']) ? $option['expr'] : $option['value']]]></code>
      <code><![CDATA[$option['name']]]></code>
      <code><![CDATA[$ret->options[$lastOptionId]['expr']]]></code>
      <code><![CDATA[$ret->options[$lastOptionId]['value']]]></code>
    </MixedOperand>
    <MixedPropertyTypeCoercion>
      <code><![CDATA[$ret->options]]></code>
      <code><![CDATA[$ret->options]]></code>
      <code><![CDATA[$ret->options]]></code>
      <code><![CDATA[$ret->options]]></code>
      <code><![CDATA[$ret->options]]></code>
      <code><![CDATA[$ret->options]]></code>
      <code><![CDATA[$ret->options]]></code>
      <code><![CDATA[$ret->options]]></code>
    </MixedPropertyTypeCoercion>
    <PossiblyNullArgument>
      <code>empty($lastOption[2]) ? [] : $lastOption[2]</code>
    </PossiblyNullArgument>
    <PossiblyNullArrayAccess>
      <code>$lastOption[1]</code>
      <code>$lastOption[2]</code>
    </PossiblyNullArrayAccess>
    <PossiblyNullPropertyFetch>
      <code><![CDATA[$ret->options[$lastOptionId]['expr']->expr]]></code>
    </PossiblyNullPropertyFetch>
    <RiskyTruthyFalsyComparison>
      <code>$lastOption</code>
      <code>empty($lastOption[2])</code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="src/Components/OrderKeyword.php">
    <PossiblyNullPropertyAssignmentValue>
      <code>$expr</code>
      <code>Expression::parse($parser, $list)</code>
    </PossiblyNullPropertyAssignmentValue>
    <RedundantCondition>
      <code>$state === 1</code>
    </RedundantCondition>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[! empty($expr->expr)]]></code>
      <code><![CDATA[! empty($expr->expr)]]></code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Components/ParameterDefinition.php">
    <MixedAssignment>
      <code><![CDATA[$expr->name]]></code>
    </MixedAssignment>
    <PossiblyNullPropertyAssignmentValue>
      <code>$inOut</code>
      <code>$name</code>
      <code>$type</code>
      <code>DataType::parse($parser, $list)</code>
    </PossiblyNullPropertyAssignmentValue>
    <RedundantCondition>
      <code>$state === 3</code>
    </RedundantCondition>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[isset($expr->name)]]></code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Components/PartitionDefinition.php">
    <MissingConstructor>
      <code>$expr</code>
      <code>$isSubpartition</code>
      <code>$name</code>
      <code>$options</code>
      <code>$subpartitions</code>
      <code>$type</code>
    </MissingConstructor>
    <MixedAssignment>
      <code><![CDATA[$ret->name]]></code>
      <code><![CDATA[$ret->type]]></code>
    </MixedAssignment>
    <MixedOperand>
      <code><![CDATA[$ret->name]]></code>
    </MixedOperand>
    <PossiblyNullPropertyAssignmentValue>
      <code><![CDATA[Expression::parse(
                        $parser,
                        $list,
                        [
                            'parenthesesDelimited' => true,
                            'breakOnAlias' => true,
                        ],
                    )]]></code>
    </PossiblyNullPropertyAssignmentValue>
    <PropertyTypeCoercion>
      <code><![CDATA[ArrayObj::parse(
                        $parser,
                        $list,
                        ['type' => self::class],
                    )]]></code>
    </PropertyTypeCoercion>
    <RedundantCondition>
      <code>$state === 6</code>
    </RedundantCondition>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[! empty($this->options)]]></code>
    </RedundantConditionGivenDocblockType>
    <UnusedVariable>
      <code>$idx</code>
    </UnusedVariable>
  </file>
  <file src="src/Components/Reference.php">
    <PossiblyInvalidPropertyFetch>
      <code><![CDATA[ArrayObj::parse($parser, $list)->values]]></code>
    </PossiblyInvalidPropertyFetch>
    <PossiblyNullPropertyAssignmentValue>
      <code>$options</code>
      <code>$table</code>
      <code><![CDATA[Expression::parse(
                    $parser,
                    $list,
                    [
                        'parseField' => 'table',
                        'breakOnAlias' => true,
                    ],
                )]]></code>
    </PossiblyNullPropertyAssignmentValue>
    <RedundantCondition>
      <code>$state === 2</code>
    </RedundantCondition>
  </file>
  <file src="src/Components/RenameOperation.php">
    <PossiblyNullPropertyAssignmentValue>
      <code>$new</code>
      <code>$old</code>
      <code><![CDATA[Expression::parse(
                    $parser,
                    $list,
                    [
                        'breakOnAlias' => true,
                        'parseField' => 'table',
                    ],
                )]]></code>
      <code><![CDATA[Expression::parse(
                    $parser,
                    $list,
                    [
                        'breakOnAlias' => true,
                        'parseField' => 'table',
                    ],
                )]]></code>
    </PossiblyNullPropertyAssignmentValue>
    <RedundantCondition>
      <code>$state === 3</code>
    </RedundantCondition>
    <RedundantConditionGivenDocblockType>
      <code><![CDATA[! empty($expr->old)]]></code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Components/SetOperation.php">
    <PossiblyNullPropertyAssignmentValue>
      <code><![CDATA[$tmp->expr]]></code>
    </PossiblyNullPropertyAssignmentValue>
    <RedundantCondition>
      <code>$state === 1</code>
      <code><![CDATA[$token->value === ',']]></code>
    </RedundantCondition>
  </file>
  <file src="src/Context.php">
    <InvalidPropertyAssignmentValue>
      <code>[]</code>
    </InvalidPropertyAssignmentValue>
    <InvalidPropertyFetch>
      <code>$context::$keywords</code>
    </InvalidPropertyFetch>
    <MixedAssignment>
      <code>self::$keywords</code>
    </MixedAssignment>
    <RiskyTruthyFalsyComparison>
      <code>empty($flag)</code>
      <code>static::isKeyword($str, true)</code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="src/Contexts/ContextMariaDb100000.php">
    <UnusedClass>
      <code>ContextMariaDb100000</code>
    </UnusedClass>
  </file>
  <file src="src/Contexts/ContextMariaDb100100.php">
    <UnusedClass>
      <code>ContextMariaDb100100</code>
    </UnusedClass>
  </file>
  <file src="src/Contexts/ContextMariaDb100200.php">
    <UnusedClass>
      <code>ContextMariaDb100200</code>
    </UnusedClass>
  </file>
  <file src="src/Contexts/ContextMariaDb100300.php">
    <UnusedClass>
      <code>ContextMariaDb100300</code>
    </UnusedClass>
  </file>
  <file src="src/Contexts/ContextMariaDb100400.php">
    <UnusedClass>
      <code>ContextMariaDb100400</code>
    </UnusedClass>
  </file>
  <file src="src/Contexts/ContextMariaDb100500.php">
    <UnusedClass>
      <code>ContextMariaDb100500</code>
    </UnusedClass>
  </file>
  <file src="src/Contexts/ContextMariaDb100600.php">
    <UnusedClass>
      <code>ContextMariaDb100600</code>
    </UnusedClass>
  </file>
  <file src="src/Contexts/ContextMariaDb100700.php">
    <UnusedClass>
      <code>ContextMariaDb100700</code>
    </UnusedClass>
  </file>
  <file src="src/Contexts/ContextMariaDb100800.php">
    <UnusedClass>
      <code>ContextMariaDb100800</code>
    </UnusedClass>
  </file>
  <file src="src/Contexts/ContextMariaDb100900.php">
    <UnusedClass>
      <code>ContextMariaDb100900</code>
    </UnusedClass>
  </file>
  <file src="src/Contexts/ContextMariaDb101000.php">
    <UnusedClass>
      <code>ContextMariaDb101000</code>
    </UnusedClass>
  </file>
  <file src="src/Contexts/ContextMariaDb101100.php">
    <UnusedClass>
      <code>ContextMariaDb101100</code>
    </UnusedClass>
  </file>
  <file src="src/Contexts/ContextMariaDb110000.php">
    <UnusedClass>
      <code>ContextMariaDb110000</code>
    </UnusedClass>
  </file>
  <file src="src/Contexts/ContextMariaDb110100.php">
    <UnusedClass>
      <code>ContextMariaDb110100</code>
    </UnusedClass>
  </file>
  <file src="src/Contexts/ContextMariaDb110200.php">
    <UnusedClass>
      <code>ContextMariaDb110200</code>
    </UnusedClass>
  </file>
  <file src="src/Contexts/ContextMySql50000.php">
    <UnusedClass>
      <code>ContextMySql50000</code>
    </UnusedClass>
  </file>
  <file src="src/Contexts/ContextMySql50100.php">
    <UnusedClass>
      <code>ContextMySql50100</code>
    </UnusedClass>
  </file>
  <file src="src/Contexts/ContextMySql50500.php">
    <UnusedClass>
      <code>ContextMySql50500</code>
    </UnusedClass>
  </file>
  <file src="src/Contexts/ContextMySql50600.php">
    <UnusedClass>
      <code>ContextMySql50600</code>
    </UnusedClass>
  </file>
  <file src="src/Contexts/ContextMySql80000.php">
    <UnusedClass>
      <code>ContextMySql80000</code>
    </UnusedClass>
  </file>
  <file src="src/Contexts/ContextMySql80100.php">
    <UnusedClass>
      <code>ContextMySql80100</code>
    </UnusedClass>
  </file>
  <file src="src/Lexer.php">
    <LoopInvalidation>
      <code><![CDATA[$this->last]]></code>
      <code><![CDATA[$this->last]]></code>
      <code><![CDATA[$this->last]]></code>
    </LoopInvalidation>
    <MixedOperand>
      <code><![CDATA[$lastToken->value]]></code>
      <code><![CDATA[$this->str[$this->last]]]></code>
      <code><![CDATA[$token->value]]></code>
    </MixedOperand>
    <PossiblyNullArgument>
      <code><![CDATA[$this->str[$this->last + 1]]]></code>
      <code><![CDATA[$this->str[$this->last]]]></code>
      <code><![CDATA[$this->str[$this->last]]]></code>
      <code><![CDATA[$this->str[$this->last]]]></code>
      <code><![CDATA[$this->str[$this->last]]]></code>
      <code><![CDATA[$this->str[$this->last]]]></code>
      <code><![CDATA[$this->str[$this->last]]]></code>
      <code><![CDATA[$this->str[$this->last]]]></code>
      <code><![CDATA[$this->str[$this->last]]]></code>
      <code><![CDATA[$this->str[$this->last]]]></code>
      <code>$token</code>
      <code>$token</code>
      <code>$token</code>
      <code>$token</code>
      <code>$token</code>
    </PossiblyNullArgument>
    <PossiblyNullOperand>
      <code><![CDATA[$this->str[$this->last++]]]></code>
      <code><![CDATA[$this->str[$this->last++]]]></code>
      <code><![CDATA[$this->str[$this->last]]]></code>
      <code><![CDATA[$this->str[$this->last]]]></code>
      <code><![CDATA[$this->str[$this->last]]]></code>
      <code><![CDATA[$this->str[$this->last]]]></code>
      <code><![CDATA[$this->str[$this->last]]]></code>
      <code><![CDATA[$this->str[$this->last]]]></code>
      <code><![CDATA[$this->str[$this->last]]]></code>
      <code><![CDATA[$this->str[$this->last]]]></code>
      <code><![CDATA[$this->str[$this->last]]]></code>
      <code><![CDATA[$this->str[$this->last]]]></code>
      <code><![CDATA[$this->str[$this->last]]]></code>
      <code><![CDATA[$this->str[$this->last]]]></code>
      <code><![CDATA[$this->str[$this->last]]]></code>
      <code><![CDATA[$this->str[$this->last]]]></code>
      <code><![CDATA[$this->str[$this->last]]]></code>
      <code><![CDATA[$this->str[$this->last]]]></code>
      <code><![CDATA[$this->str[$this->last]]]></code>
      <code><![CDATA[$this->str[++$this->last]]]></code>
      <code><![CDATA[$this->str[++$this->last]]]></code>
      <code><![CDATA[$this->str[++$this->last]]]></code>
      <code><![CDATA[$this->str[++$this->last]]]></code>
      <code><![CDATA[$this->str[++$this->last]]]></code>
    </PossiblyNullOperand>
    <PossiblyNullPropertyFetch>
      <code><![CDATA[$next->type]]></code>
      <code><![CDATA[$next->value]]></code>
      <code><![CDATA[$next->value]]></code>
      <code><![CDATA[$next->value]]></code>
    </PossiblyNullPropertyFetch>
    <RiskyTruthyFalsyComparison>
      <code>! $flags</code>
      <code>! $flags</code>
      <code>! $flags</code>
      <code>! $flags</code>
      <code>Context::isComment($token)</code>
      <code>Context::isComment($token)</code>
      <code>Context::isComment($token, $end)</code>
      <code>empty($delimiter)</code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="src/Parser.php">
    <InvalidPropertyAssignmentValue>
      <code><![CDATA[$lastStatement->union]]></code>
    </InvalidPropertyAssignmentValue>
    <InvalidStringClass>
      <code><![CDATA[new $class($this, $this->list)]]></code>
    </InvalidStringClass>
    <MixedArrayOffset>
      <code><![CDATA[self::STATEMENT_PARSERS[$statementName ?? $token->keyword]]]></code>
      <code><![CDATA[self::STATEMENT_PARSERS[$token->keyword]]]></code>
    </MixedArrayOffset>
    <MixedMethodCall>
      <code>validateClauseOrder</code>
    </MixedMethodCall>
    <PossiblyNullArgument>
      <code>$list</code>
      <code>$list</code>
      <code><![CDATA[$token->token]]></code>
    </PossiblyNullArgument>
    <PossiblyNullArrayAccess>
      <code><![CDATA[$list->tokens[$list->idx]]]></code>
    </PossiblyNullArrayAccess>
    <PossiblyNullArrayOffset>
      <code><![CDATA[$list->tokens]]></code>
      <code>self::STATEMENT_PARSERS</code>
    </PossiblyNullArrayOffset>
    <PossiblyNullOperand>
      <code><![CDATA[$list->idx]]></code>
      <code><![CDATA[$list->idx]]></code>
      <code>$prevLastIdx</code>
    </PossiblyNullOperand>
    <PossiblyNullPropertyAssignment>
      <code>$list</code>
      <code>$list</code>
    </PossiblyNullPropertyAssignment>
    <PossiblyNullPropertyAssignmentValue>
      <code>$lastIdx</code>
    </PossiblyNullPropertyAssignmentValue>
    <PossiblyNullPropertyFetch>
      <code><![CDATA[$list->count]]></code>
      <code><![CDATA[$list->idx]]></code>
      <code><![CDATA[$list->tokens]]></code>
      <code><![CDATA[$token->keyword]]></code>
      <code><![CDATA[$token->token]]></code>
      <code><![CDATA[$token->type]]></code>
      <code><![CDATA[$token->value]]></code>
    </PossiblyNullPropertyFetch>
    <PossiblyNullReference>
      <code>getNextOfType</code>
      <code>getNextOfType</code>
      <code>getNextOfType</code>
    </PossiblyNullReference>
    <PropertyTypeCoercion>
      <code><![CDATA[$lastTransaction->statements]]></code>
      <code><![CDATA[$this->statements]]></code>
      <code><![CDATA[$this->statements]]></code>
      <code><![CDATA[$this->statements]]></code>
    </PropertyTypeCoercion>
    <UnsupportedPropertyReferenceUsage>
      <code><![CDATA[$list = &$this->list]]></code>
    </UnsupportedPropertyReferenceUsage>
  </file>
  <file src="src/Statement.php">
    <DocblockTypeContradiction>
      <code><![CDATA[empty(static::$clauses[$token->value])]]></code>
      <code><![CDATA[empty(static::$statementOptions[$token->value])]]></code>
    </DocblockTypeContradiction>
    <InvalidArgument>
      <code><![CDATA[$parsedClauses[$token->value]]]></code>
    </InvalidArgument>
    <MixedArgument>
      <code><![CDATA[$this->$field]]></code>
      <code><![CDATA[$this->$field]]></code>
      <code><![CDATA[$this->$field]]></code>
      <code><![CDATA[$this->$field]]></code>
      <code><![CDATA[$this->$field]]></code>
      <code><![CDATA[$this->$field]]></code>
      <code><![CDATA[$this->$field]]></code>
      <code><![CDATA[$this->$field]]></code>
      <code><![CDATA[$this->$field]]></code>
      <code><![CDATA[$this->$field]]></code>
      <code><![CDATA[$this->$field]]></code>
    </MixedArgument>
    <MixedArrayOffset>
      <code><![CDATA[$parsedClauses[$token->value]]]></code>
      <code><![CDATA[$parsedClauses[$token->value]]]></code>
      <code><![CDATA[Parser::KEYWORD_PARSERS[$token->value]]]></code>
      <code>Parser::KEYWORD_PARSERS[$tokenValue]</code>
      <code><![CDATA[Parser::STATEMENT_PARSERS[$token->keyword]]]></code>
      <code><![CDATA[Parser::STATEMENT_PARSERS[$token->value]]]></code>
      <code><![CDATA[static::$clauses[$token->value]]]></code>
      <code><![CDATA[static::$statementOptions[$token->value]]]></code>
    </MixedArrayOffset>
    <MixedAssignment>
      <code>$tokenValue</code>
    </MixedAssignment>
    <MixedMethodCall>
      <code>build</code>
    </MixedMethodCall>
    <MixedOperand>
      <code><![CDATA[$this->$field->build()]]></code>
    </MixedOperand>
    <PossiblyUndefinedArrayOffset>
      <code><![CDATA[Parser::KEYWORD_PARSERS[$name]['class']]]></code>
      <code><![CDATA[Parser::KEYWORD_PARSERS[$name]['field']]]></code>
      <code><![CDATA[Parser::KEYWORD_PARSERS[$tokenValue]['class']]]></code>
      <code><![CDATA[Parser::KEYWORD_PARSERS[$tokenValue]['field']]]></code>
    </PossiblyUndefinedArrayOffset>
    <PossiblyUnusedReturnValue>
      <code>bool</code>
    </PossiblyUnusedReturnValue>
    <RedundantCondition>
      <code><![CDATA[! empty($parsedClauses[$token->value])]]></code>
    </RedundantCondition>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[! stripos($clauseType, 'JOIN')]]></code>
      <code><![CDATA[empty(Parser::KEYWORD_PARSERS[$tokenValue]['options'])]]></code>
      <code><![CDATA[stripos($clauseType, 'JOIN')]]></code>
      <code><![CDATA[stripos($clauseType, 'JOIN')]]></code>
    </RiskyTruthyFalsyComparison>
    <UndefinedMethod>
      <code><![CDATA[$class::buildAll($this->$field)]]></code>
      <code><![CDATA[$class::buildAll($this->$field)]]></code>
      <code><![CDATA[$class::buildAll($this->$field)]]></code>
      <code><![CDATA[$class::buildAll($this->$field)]]></code>
      <code><![CDATA[$class::buildAll($this->$field)]]></code>
    </UndefinedMethod>
    <UnusedForeachValue>
      <code>$index</code>
    </UnusedForeachValue>
  </file>
  <file src="src/Statements/AlterStatement.php">
    <MixedArgumentTypeCoercion>
      <code>$tmp</code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment>
      <code>$altered</code>
      <code>$tmp[]</code>
    </MixedAssignment>
    <MixedMethodCall>
      <code>build</code>
    </MixedMethodCall>
    <PossiblyNullIterator>
      <code><![CDATA[$this->altered]]></code>
    </PossiblyNullIterator>
    <PossiblyNullReference>
      <code>build</code>
      <code>build</code>
    </PossiblyNullReference>
    <RedundantCondition>
      <code>$state === 1</code>
    </RedundantCondition>
  </file>
  <file src="src/Statements/AnalyzeStatement.php">
    <PossiblyUnusedProperty>
      <code>$tables</code>
    </PossiblyUnusedProperty>
  </file>
  <file src="src/Statements/CallStatement.php">
    <PossiblyNullOperand>
      <code><![CDATA[$this->call->name]]></code>
    </PossiblyNullOperand>
    <PossiblyNullPropertyFetch>
      <code><![CDATA[$this->call->name]]></code>
      <code><![CDATA[$this->call->parameters]]></code>
    </PossiblyNullPropertyFetch>
  </file>
  <file src="src/Statements/CreateStatement.php">
    <MixedArgument>
      <code><![CDATA[$this->$field]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code><![CDATA[$this->partitionsNum]]></code>
      <code><![CDATA[$this->subpartitionsNum]]></code>
    </MixedAssignment>
    <MixedOperand>
      <code><![CDATA[$this->$field]]></code>
    </MixedOperand>
    <PossiblyFalseOperand>
      <code>$brackets</code>
      <code>$brackets</code>
    </PossiblyFalseOperand>
    <PossiblyNullArgument>
      <code><![CDATA[$this->parameters]]></code>
    </PossiblyNullArgument>
    <PossiblyNullPropertyFetch>
      <code><![CDATA[$token->value]]></code>
      <code><![CDATA[$token->value]]></code>
    </PossiblyNullPropertyFetch>
    <PossiblyNullReference>
      <code>build</code>
      <code>build</code>
      <code>build</code>
      <code>build</code>
      <code>build</code>
      <code>build</code>
      <code>build</code>
      <code>build</code>
      <code>build</code>
      <code>build</code>
      <code>build</code>
      <code>build</code>
      <code>build</code>
      <code>build</code>
      <code>build</code>
      <code>has</code>
      <code>has</code>
    </PossiblyNullReference>
    <PropertyTypeCoercion>
      <code><![CDATA[ArrayObj::parse(
                                $parser,
                                $list,
                                ['type' => PartitionDefinition::class],
                            )]]></code>
      <code>ArrayObj::parse($parser, $list)</code>
    </PropertyTypeCoercion>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[empty($this->partitionBy)]]></code>
      <code><![CDATA[empty($this->partitionBy)]]></code>
      <code><![CDATA[empty($this->partitions)]]></code>
      <code><![CDATA[empty($this->partitionsNum)]]></code>
      <code><![CDATA[empty($this->subpartitionBy)]]></code>
      <code><![CDATA[empty($this->subpartitionsNum)]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="src/Statements/DeleteStatement.php">
    <MixedArgument>
      <code><![CDATA[$token->keyword]]></code>
    </MixedArgument>
    <MixedAssignment>
      <code>$fromExpr</code>
    </MixedAssignment>
    <MixedPropertyAssignment>
      <code>$fromExpr</code>
      <code>$fromExpr</code>
      <code>$fromExpr</code>
    </MixedPropertyAssignment>
    <MixedPropertyFetch>
      <code><![CDATA[$fromExpr->column]]></code>
      <code><![CDATA[$fromExpr->table]]></code>
    </MixedPropertyFetch>
    <PossiblyNullIterator>
      <code><![CDATA[$this->from]]></code>
    </PossiblyNullIterator>
    <PossiblyNullReference>
      <code>build</code>
    </PossiblyNullReference>
    <PossiblyUnusedProperty>
      <code>$partition</code>
    </PossiblyUnusedProperty>
  </file>
  <file src="src/Statements/DropStatement.php">
    <PossiblyUnusedProperty>
      <code>$table</code>
    </PossiblyUnusedProperty>
  </file>
  <file src="src/Statements/ExplainStatement.php">
    <MixedAssignment>
      <code><![CDATA[$this->connectionId]]></code>
      <code><![CDATA[$this->explainedDatabase]]></code>
      <code><![CDATA[$this->explainedTable]]></code>
    </MixedAssignment>
    <PossiblyNullPropertyFetch>
      <code><![CDATA[$nextToken->keyword]]></code>
      <code><![CDATA[$nextToken->value]]></code>
    </PossiblyNullPropertyFetch>
    <PropertyNotSetInConstructor>
      <code>$statementAlias</code>
    </PropertyNotSetInConstructor>
    <RedundantCondition>
      <code>$state === 3</code>
    </RedundantCondition>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[$this->connectionId]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="src/Statements/InsertStatement.php">
    <PossiblyNullOperand>
      <code><![CDATA[$this->into]]></code>
      <code><![CDATA[$this->options]]></code>
    </PossiblyNullOperand>
    <PossiblyUnusedProperty>
      <code>$with</code>
    </PossiblyUnusedProperty>
  </file>
  <file src="src/Statements/LoadStatement.php">
    <MixedArgument>
      <code><![CDATA[$token->value]]></code>
    </MixedArgument>
    <NoValue>
      <code>$state</code>
    </NoValue>
    <PossiblyInvalidPropertyAssignmentValue>
      <code>ArrayObj::parse($parser, $list)</code>
    </PossiblyInvalidPropertyAssignmentValue>
    <PossiblyNullOperand>
      <code><![CDATA[$this->fieldsOptions]]></code>
      <code><![CDATA[$this->fileName]]></code>
      <code><![CDATA[$this->linesRows]]></code>
      <code><![CDATA[$this->options]]></code>
      <code><![CDATA[$this->table]]></code>
    </PossiblyNullOperand>
    <PossiblyNullPropertyFetch>
      <code><![CDATA[$nextToken->keyword]]></code>
      <code><![CDATA[$nextToken->token]]></code>
      <code><![CDATA[$nextToken->type]]></code>
    </PossiblyNullPropertyFetch>
    <RedundantCondition>
      <code>$state === 1</code>
    </RedundantCondition>
    <TypeDoesNotContainType>
      <code>$state === 2</code>
    </TypeDoesNotContainType>
  </file>
  <file src="src/Statements/LockStatement.php">
    <RedundantCondition>
      <code>$state === 2</code>
    </RedundantCondition>
  </file>
  <file src="src/Statements/MaintenanceStatement.php">
    <PossiblyNullReference>
      <code>merge</code>
    </PossiblyNullReference>
    <PossiblyUnusedProperty>
      <code>$tables</code>
    </PossiblyUnusedProperty>
  </file>
  <file src="src/Statements/OptimizeStatement.php">
    <PossiblyUnusedProperty>
      <code>$tables</code>
    </PossiblyUnusedProperty>
  </file>
  <file src="src/Statements/PurgeStatement.php">
    <MixedAssignment>
      <code><![CDATA[$this->endOption]]></code>
      <code><![CDATA[$this->logType]]></code>
    </MixedAssignment>
    <PossiblyNullOperand>
      <code><![CDATA[$this->endExpr]]></code>
      <code><![CDATA[$this->logType]]></code>
    </PossiblyNullOperand>
  </file>
  <file src="src/Statements/RenameStatement.php">
    <PossiblyNullArgument>
      <code><![CDATA[$this->renames]]></code>
    </PossiblyNullArgument>
  </file>
  <file src="src/Statements/ReplaceStatement.php">
    <PossiblyNullOperand>
      <code><![CDATA[$this->into]]></code>
      <code><![CDATA[$this->options]]></code>
    </PossiblyNullOperand>
  </file>
  <file src="src/Statements/SelectStatement.php">
    <PossiblyNullArrayOffset>
      <code>$tables[$thisDb]</code>
    </PossiblyNullArrayOffset>
    <PossiblyUnusedProperty>
      <code>$endOptions</code>
      <code>$groupOptions</code>
      <code>$indexHints</code>
      <code>$partition</code>
    </PossiblyUnusedProperty>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[empty($this->join)]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="src/Statements/SetStatement.php">
    <PossiblyNullArgument>
      <code><![CDATA[$this->set]]></code>
    </PossiblyNullArgument>
    <PossiblyNullReference>
      <code>build</code>
    </PossiblyNullReference>
  </file>
  <file src="src/Statements/TransactionStatement.php">
    <MixedAssignment>
      <code>$statement</code>
    </MixedAssignment>
    <MixedMethodCall>
      <code>build</code>
    </MixedMethodCall>
    <MixedOperand>
      <code><![CDATA[$statement->build()]]></code>
    </MixedOperand>
    <PossiblyNullIterator>
      <code><![CDATA[$this->statements]]></code>
    </PossiblyNullIterator>
    <PossiblyNullReference>
      <code>build</code>
      <code>has</code>
    </PossiblyNullReference>
  </file>
  <file src="src/Statements/TruncateStatement.php">
    <PossiblyNullOperand>
      <code><![CDATA[$this->table]]></code>
    </PossiblyNullOperand>
  </file>
  <file src="src/Statements/UpdateStatement.php">
    <PossiblyUnusedProperty>
      <code>$join</code>
      <code>$set</code>
      <code>$where</code>
    </PossiblyUnusedProperty>
  </file>
  <file src="src/Statements/WithStatement.php">
    <MixedArgument>
      <code>$wither</code>
    </MixedArgument>
    <MixedAssignment>
      <code>$wither</code>
    </MixedAssignment>
    <PossiblyNullArrayOffset>
      <code><![CDATA[$this->withers]]></code>
      <code><![CDATA[$this->withers]]></code>
    </PossiblyNullArrayOffset>
    <RedundantCondition>
      <code>$state === 5</code>
    </RedundantCondition>
  </file>
  <file src="src/Tools/ContextGenerator.php">
    <PossiblyInvalidArgument>
      <code><![CDATA[$options['keywords']]]></code>
    </PossiblyInvalidArgument>
    <RedundantCondition>
      <code>++$i !== $count</code>
      <code>++$i !== $count</code>
    </RedundantCondition>
  </file>
  <file src="src/Tools/CustomJsonSerializer.php">
    <MixedAssignment>
      <code>$data[$property]</code>
      <code>$data[$property]</code>
    </MixedAssignment>
    <MoreSpecificImplementedParamType>
      <code>$properties</code>
    </MoreSpecificImplementedParamType>
    <PropertyNotSetInConstructor>
      <code>CustomJsonSerializer</code>
    </PropertyNotSetInConstructor>
    <UnusedMethodCall>
      <code>setAccessible</code>
    </UnusedMethodCall>
  </file>
  <file src="src/Tools/TestGenerator.php">
    <MixedOperand>
      <code>$debug</code>
    </MixedOperand>
    <PossiblyNullArgument>
      <code>$debugFile</code>
      <code>$debugFile</code>
    </PossiblyNullArgument>
    <RiskyTruthyFalsyComparison>
      <code>empty($debug)</code>
      <code><![CDATA[empty($parser->errors)]]></code>
      <code>empty($query)</code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="src/Translator.php">
    <RedundantPropertyInitializationCheck>
      <code>isset(self::$loader)</code>
      <code>isset(self::$translator)</code>
    </RedundantPropertyInitializationCheck>
  </file>
  <file src="src/UtfString.php">
    <PossiblyUnusedProperty>
      <code>$byteLen</code>
    </PossiblyUnusedProperty>
  </file>
  <file src="src/Utils/BufferedQuery.php">
    <MixedArgument>
      <code>$i</code>
      <code>$i</code>
      <code><![CDATA[$i + $this->delimiterLen]]></code>
      <code>$i - $iBak</code>
      <code>$iBak</code>
      <code><![CDATA[$this->query[$i + 2]]]></code>
      <code><![CDATA[$this->query[$i + 9]]]></code>
      <code><![CDATA[$this->query[$i]]]></code>
      <code><![CDATA[$this->query[$i]]]></code>
      <code><![CDATA[$this->query[$i]]]></code>
    </MixedArgument>
    <MixedArrayOffset>
      <code><![CDATA[$this->query[$i + 1]]]></code>
      <code><![CDATA[$this->query[$i + 1]]]></code>
      <code><![CDATA[$this->query[$i + 1]]]></code>
      <code><![CDATA[$this->query[$i + 1]]]></code>
      <code><![CDATA[$this->query[$i + 2]]]></code>
      <code><![CDATA[$this->query[$i + 2]]]></code>
      <code><![CDATA[$this->query[$i + 2]]]></code>
      <code><![CDATA[$this->query[$i + 2]]]></code>
      <code><![CDATA[$this->query[$i + 3]]]></code>
      <code><![CDATA[$this->query[$i + 3]]]></code>
      <code><![CDATA[$this->query[$i + 4]]]></code>
      <code><![CDATA[$this->query[$i + 4]]]></code>
      <code><![CDATA[$this->query[$i + 5]]]></code>
      <code><![CDATA[$this->query[$i + 5]]]></code>
      <code><![CDATA[$this->query[$i + 6]]]></code>
      <code><![CDATA[$this->query[$i + 6]]]></code>
      <code><![CDATA[$this->query[$i + 7]]]></code>
      <code><![CDATA[$this->query[$i + 7]]]></code>
      <code><![CDATA[$this->query[$i + 8]]]></code>
      <code><![CDATA[$this->query[$i + 8]]]></code>
      <code><![CDATA[$this->query[$i + 9]]]></code>
      <code><![CDATA[$this->query[$i - 1]]]></code>
      <code><![CDATA[$this->query[$i++]]]></code>
      <code><![CDATA[$this->query[$i]]]></code>
      <code><![CDATA[$this->query[$i]]]></code>
      <code><![CDATA[$this->query[$i]]]></code>
      <code><![CDATA[$this->query[$i]]]></code>
      <code><![CDATA[$this->query[$i]]]></code>
      <code><![CDATA[$this->query[$i]]]></code>
      <code><![CDATA[$this->query[$i]]]></code>
      <code><![CDATA[$this->query[$i]]]></code>
      <code><![CDATA[$this->query[$i]]]></code>
      <code><![CDATA[$this->query[$i]]]></code>
      <code><![CDATA[$this->query[$i]]]></code>
      <code><![CDATA[$this->query[++$i]]]></code>
    </MixedArrayOffset>
    <MixedAssignment>
      <code>$i</code>
      <code>$i</code>
      <code>$i</code>
      <code>$i</code>
      <code>$i</code>
      <code>$i</code>
      <code>$iBak</code>
    </MixedAssignment>
    <MixedOperand>
      <code>$i</code>
      <code>$i</code>
      <code>$i</code>
      <code>$i</code>
      <code>$i</code>
      <code>$i</code>
      <code>$i</code>
      <code>$i</code>
      <code>$i</code>
      <code>$i</code>
      <code>$i</code>
      <code>$i</code>
      <code>$i</code>
      <code>$i</code>
      <code>$i</code>
      <code>$i</code>
      <code>$i</code>
      <code>$i</code>
      <code>$i</code>
      <code>$i</code>
      <code>$i</code>
      <code>$i</code>
      <code>$i</code>
      <code>$i</code>
      <code>$i</code>
      <code>$i</code>
      <code>$i</code>
      <code>$i</code>
      <code>$i</code>
      <code>$i</code>
      <code>$i</code>
      <code>$i</code>
      <code><![CDATA[$i + 1 < $len ? $this->query[++$i] : '']]></code>
      <code><![CDATA[$this->query[$i++]]]></code>
      <code><![CDATA[$this->query[$i]]]></code>
    </MixedOperand>
    <PossiblyNullOperand>
      <code><![CDATA[$this->status]]></code>
    </PossiblyNullOperand>
  </file>
  <file src="src/Utils/CLI.php">
    <InvalidReturnStatement>
      <code>getopt($opt, $long)</code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code>string[]|false[]|false</code>
    </InvalidReturnType>
    <MixedArgumentTypeCoercion>
      <code>$idx</code>
    </MixedArgumentTypeCoercion>
    <PossiblyFalseArgument>
      <code><![CDATA[$params['c']]]></code>
      <code><![CDATA[$params['q']]]></code>
      <code><![CDATA[$params['q']]]></code>
      <code><![CDATA[$params['q']]]></code>
    </PossiblyFalseArgument>
    <PossiblyUnusedMethod>
      <code>run</code>
    </PossiblyUnusedMethod>
    <RiskyTruthyFalsyComparison>
      <code>$stdIn</code>
      <code>$stdIn</code>
      <code>$stdIn</code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="src/Utils/Error.php">
    <PossiblyNullArgument>
      <code>$err[0]</code>
      <code>$err[1]</code>
      <code>$err[3]</code>
    </PossiblyNullArgument>
    <PossiblyNullPropertyFetch>
      <code><![CDATA[$err->token->position]]></code>
      <code><![CDATA[$err->token->token]]></code>
    </PossiblyNullPropertyFetch>
    <RedundantConditionGivenDocblockType>
      <code>$obj instanceof Parser</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Utils/Formatter.php">
    <MixedArgument>
      <code>$text</code>
      <code>$text</code>
      <code>$text</code>
      <code>$text</code>
      <code>$text</code>
      <code>$text</code>
    </MixedArgument>
    <MixedArrayAccess>
      <code><![CDATA[$format['cli']]]></code>
      <code><![CDATA[$format['cli']]]></code>
      <code><![CDATA[$format['cli']]]></code>
      <code><![CDATA[$format['flags']]]></code>
      <code><![CDATA[$format['flags']]]></code>
      <code><![CDATA[$format['function']]]></code>
      <code><![CDATA[$format['html']]]></code>
      <code><![CDATA[$format['type']]]></code>
    </MixedArrayAccess>
    <MixedArrayOffset>
      <code><![CDATA[JoinKeyword::JOINS[$list->tokens[$list->idx - 2]->value]]]></code>
      <code><![CDATA[JoinKeyword::JOINS[$list->tokens[$list->idx - 4]->value]]]></code>
      <code><![CDATA[JoinKeyword::JOINS[$list->tokens[$list->idx - 6]->value]]]></code>
      <code><![CDATA[JoinKeyword::JOINS[$prev->value]]]></code>
      <code><![CDATA[Parser::KEYWORD_PARSERS[$token->keyword]]]></code>
      <code><![CDATA[Parser::STATEMENT_PARSERS[$token->keyword]]]></code>
      <code>self::$inlineClauses[$lastClause]</code>
      <code>self::$inlineClauses[$lastClause]</code>
      <code>self::$shortClauses[$lastClause]</code>
    </MixedArrayOffset>
    <MixedArrayTypeCoercion>
      <code>self::$inlineClauses[$lastClause]</code>
      <code>self::$inlineClauses[$lastClause]</code>
      <code>self::$shortClauses[$lastClause]</code>
    </MixedArrayTypeCoercion>
    <MixedAssignment>
      <code>$blocksLineEndings[]</code>
      <code>$format</code>
      <code>$func</code>
      <code>$lastClause</code>
      <code>$lineEnded</code>
      <code>$prev</code>
      <code>$text</code>
    </MixedAssignment>
    <MixedFunctionCall>
      <code>$func($text)</code>
    </MixedFunctionCall>
    <MixedInferredReturnType>
      <code>string</code>
    </MixedInferredReturnType>
    <MixedOperand>
      <code><![CDATA[$format['cli']]]></code>
      <code><![CDATA[$format['flags']]]></code>
      <code><![CDATA[$format['html']]]></code>
      <code>$lineEnded</code>
    </MixedOperand>
    <MixedReturnStatement>
      <code>$text</code>
      <code>$text</code>
    </MixedReturnStatement>
    <PossiblyInvalidArgument>
      <code><![CDATA[$options['formats']]]></code>
      <code><![CDATA[$this->options['indentation']]]></code>
    </PossiblyInvalidArgument>
    <PossiblyInvalidIterator>
      <code><![CDATA[$this->options['formats']]]></code>
    </PossiblyInvalidIterator>
    <RiskyTruthyFalsyComparison>
      <code>$lineEnded</code>
      <code><![CDATA[$this->options['clause_newline']]]></code>
      <code><![CDATA[$this->options['parts_newline']]]></code>
      <code><![CDATA[$this->options['parts_newline']]]></code>
      <code><![CDATA[$this->options['parts_newline']]]></code>
      <code><![CDATA[$this->options['remove_comments']]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="src/Utils/Query.php">
    <DocblockTypeContradiction>
      <code><![CDATA[empty($parser->statements[0])]]></code>
    </DocblockTypeContradiction>
    <InvalidNullableReturnType>
      <code>int</code>
    </InvalidNullableReturnType>
    <MixedArrayOffset>
      <code>$clauses[$clauseType]</code>
      <code><![CDATA[$clauses[$token->keyword]]]></code>
      <code><![CDATA[$clauses[$token->keyword]]]></code>
    </MixedArrayOffset>
    <MixedArrayTypeCoercion>
      <code>$clauses[$clauseType]</code>
    </MixedArrayTypeCoercion>
    <MixedAssignment>
      <code>$clauseType</code>
      <code>$expr</code>
      <code>$expressions[]</code>
      <code>$rename</code>
      <code>$ret[]</code>
    </MixedAssignment>
    <MixedMethodCall>
      <code>build</code>
    </MixedMethodCall>
    <MixedPropertyAssignment>
      <code>$expr</code>
      <code>$expr</code>
    </MixedPropertyAssignment>
    <MixedPropertyFetch>
      <code><![CDATA[$expr->table]]></code>
      <code><![CDATA[$rename->old]]></code>
    </MixedPropertyFetch>
    <MixedReturnTypeCoercion>
      <code>$ret</code>
      <code><![CDATA[array<int, string>]]></code>
    </MixedReturnTypeCoercion>
    <NullableReturnStatement>
      <code>$i</code>
    </NullableReturnStatement>
    <PossiblyNullArrayOffset>
      <code><![CDATA[$list->tokens]]></code>
      <code><![CDATA[$list->tokens]]></code>
    </PossiblyNullArrayOffset>
    <PossiblyNullIterator>
      <code>$expressions</code>
      <code><![CDATA[$statement->renames]]></code>
    </PossiblyNullIterator>
    <PossiblyNullOperand>
      <code>$i</code>
      <code>$i</code>
    </PossiblyNullOperand>
    <PossiblyNullPropertyFetch>
      <code><![CDATA[$lexer->list->getNextOfType(TokenType::Keyword)->keyword]]></code>
      <code><![CDATA[$statement->into->dest]]></code>
    </PossiblyNullPropertyFetch>
    <PossiblyNullReference>
      <code>has</code>
      <code>has</code>
      <code>has</code>
    </PossiblyNullReference>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[empty($expr->subquery)]]></code>
      <code><![CDATA[empty($statement->group)]]></code>
      <code><![CDATA[empty($statement->group)]]></code>
      <code><![CDATA[empty($statement->having)]]></code>
      <code><![CDATA[empty($statement->having)]]></code>
      <code><![CDATA[empty($statement->join)]]></code>
      <code><![CDATA[empty($statement->join)]]></code>
      <code><![CDATA[empty($statement->order)]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="src/Utils/Routine.php">
    <DocblockTypeContradiction>
      <code>empty($param[0])</code>
    </DocblockTypeContradiction>
    <MixedArgumentTypeCoercion>
      <code>$options</code>
      <code>$options</code>
      <code><![CDATA[$retval['opts'][$idx]]]></code>
    </MixedArgumentTypeCoercion>
    <MixedArrayAccess>
      <code><![CDATA[$opt['value']]]></code>
      <code><![CDATA[$opt['value']]]></code>
      <code><![CDATA[$opt['value']]]></code>
    </MixedArrayAccess>
    <MixedAssignment>
      <code>$opt</code>
      <code>$opt</code>
      <code>$opt</code>
      <code>$options[]</code>
      <code>$options[]</code>
      <code><![CDATA[$retval['opts'][$idx][]]]></code>
    </MixedAssignment>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[empty($statement->parameters)]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="src/Utils/Table.php">
    <MixedArgument>
      <code>$opt</code>
      <code>$opt</code>
    </MixedArgument>
    <MixedAssignment>
      <code>$opt</code>
      <code>$opt</code>
      <code>$option</code>
      <code>$option</code>
      <code>$option</code>
      <code><![CDATA[$ret[$field->name]['default_value']]]></code>
      <code><![CDATA[$ret[$field->name]['expr']]]></code>
    </MixedAssignment>
    <PossiblyNullArrayOffset>
      <code>$ret</code>
      <code>$ret</code>
      <code>$ret</code>
      <code>$ret</code>
      <code>$ret</code>
      <code>$ret</code>
    </PossiblyNullArrayOffset>
    <PossiblyNullReference>
      <code>has</code>
      <code>has</code>
    </PossiblyNullReference>
    <RiskyTruthyFalsyComparison>
      <code><![CDATA[empty($statement->fields)]]></code>
      <code><![CDATA[empty($statement->fields)]]></code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="tests/Builder/AlterStatementTest.php">
    <PossiblyUnusedMethod>
      <code>provideBuilderForRenameColumn</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Builder/CreateStatementTest.php">
    <PossiblyNullReference>
      <code>__toString</code>
      <code>__toString</code>
      <code>isEmpty</code>
      <code>isEmpty</code>
      <code>isEmpty</code>
      <code>isEmpty</code>
    </PossiblyNullReference>
    <PossiblyUnusedMethod>
      <code>partitionQueriesProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Builder/StatementTest.php">
    <PossiblyUnusedMethod>
      <code>getAliasesProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Components/ArrayObjTest.php">
    <PossiblyUnusedMethod>
      <code>parseProvider</code>
    </PossiblyUnusedMethod>
    <UndefinedMethod>
      <code>$components</code>
      <code>$components</code>
    </UndefinedMethod>
  </file>
  <file src="tests/Components/CreateDefinitionTest.php">
    <PossiblyNullPropertyFetch>
      <code><![CDATA[$component[0]->type->name]]></code>
      <code><![CDATA[$component[1]->key->name]]></code>
      <code><![CDATA[$component[1]->key->type]]></code>
    </PossiblyNullPropertyFetch>
    <PossiblyNullReference>
      <code>has</code>
    </PossiblyNullReference>
  </file>
  <file src="tests/Components/ExpressionTest.php">
    <PossiblyNullPropertyFetch>
      <code><![CDATA[$component->alias]]></code>
      <code><![CDATA[$component->alias]]></code>
      <code><![CDATA[$component->expr]]></code>
      <code><![CDATA[$component->expr]]></code>
      <code><![CDATA[$component->expr]]></code>
      <code><![CDATA[$component->expr]]></code>
      <code><![CDATA[$component->table]]></code>
      <code><![CDATA[$component->table]]></code>
    </PossiblyNullPropertyFetch>
    <PossiblyUnusedMethod>
      <code>mysqlCommandsProvider</code>
      <code>parseErrProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Components/GroupKeywordTest.php">
    <PossiblyUnusedMethod>
      <code>provideExpressions</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Components/JoinKeywordTest.php">
    <DocblockTypeContradiction>
      <code>assertNull</code>
      <code>assertNull</code>
      <code>assertNull</code>
    </DocblockTypeContradiction>
  </file>
  <file src="tests/Components/KeyTest.php">
    <DocblockTypeContradiction>
      <code>assertNull</code>
      <code>assertNull</code>
    </DocblockTypeContradiction>
  </file>
  <file src="tests/Components/LimitTest.php">
    <PossiblyUnusedMethod>
      <code>parseProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Components/LockExpressionTest.php">
    <PossiblyUnusedMethod>
      <code>parseErrProvider</code>
    </PossiblyUnusedMethod>
    <RedundantConditionGivenDocblockType>
      <code>assertNotNull</code>
      <code>assertNotNull</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="tests/Components/PartitionDefinitionTest.php">
    <PossiblyInvalidPropertyFetch>
      <code><![CDATA[$component->expr->expr]]></code>
      <code><![CDATA[$component->expr->expr]]></code>
    </PossiblyInvalidPropertyFetch>
  </file>
  <file src="tests/Lexer/ContextTest.php">
    <PossiblyUnusedMethod>
      <code>contextLoadingProvider</code>
      <code>contextNamesProvider</code>
      <code>providerForTestMode</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Lexer/LexerTest.php">
    <PossiblyUnusedMethod>
      <code>lexProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Misc/BugsTest.php">
    <PossiblyUnusedMethod>
      <code>bugProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Misc/ParameterTest.php">
    <PossiblyUnusedMethod>
      <code>parameterProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Misc/UtfStringTest.php">
    <PossiblyUnusedMethod>
      <code>utf8StringsProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Parser/AlterStatementTest.php">
    <PossiblyUnusedMethod>
      <code>alterProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Parser/AnalyzeStatementTest.php">
    <PossiblyUnusedMethod>
      <code>analyzeProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Parser/CallStatementTest.php">
    <PossiblyUnusedMethod>
      <code>callProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Parser/CreateStatementTest.php">
    <PossiblyUnusedMethod>
      <code>createProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Parser/DeleteStatementTest.php">
    <PossiblyUnusedMethod>
      <code>deleteProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Parser/DropStatementTest.php">
    <PossiblyUnusedMethod>
      <code>dropProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Parser/ExplainStatementTest.php">
    <PossiblyUnusedMethod>
      <code>explainProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Parser/InsertStatementTest.php">
    <PossiblyUnusedMethod>
      <code>insertProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Parser/LoadStatementTest.php">
    <PossiblyNullReference>
      <code>has</code>
    </PossiblyNullReference>
    <PossiblyUnusedMethod>
      <code>loadProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Parser/LockStatementTest.php">
    <PossiblyUnusedMethod>
      <code>lockProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Parser/ParserLongExportsTest.php">
    <MixedAssignment>
      <code>$transactionStatement</code>
    </MixedAssignment>
    <PossiblyNullIterator>
      <code><![CDATA[$statement->statements]]></code>
    </PossiblyNullIterator>
    <PossiblyUnusedMethod>
      <code>exportFileProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Parser/ParserTest.php">
    <PossiblyUnusedMethod>
      <code>parseProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Parser/PurgeStatementTest.php">
    <PossiblyUnusedMethod>
      <code>purgeProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Parser/RenameStatementTest.php">
    <PossiblyUnusedMethod>
      <code>renameProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Parser/ReplaceStatementTest.php">
    <PossiblyUnusedMethod>
      <code>replaceProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Parser/RestoreStatementTest.php">
    <PossiblyUnusedMethod>
      <code>restoreProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Parser/SelectStatementTest.php">
    <PossiblyNullReference>
      <code>has</code>
    </PossiblyNullReference>
    <PossiblyUnusedMethod>
      <code>selectProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Parser/SetStatementTest.php">
    <PossiblyUnusedMethod>
      <code>setProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Parser/TransactionStatementTest.php">
    <PossiblyUnusedMethod>
      <code>transactionProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Parser/UpdateStatementTest.php">
    <PossiblyUnusedMethod>
      <code>updateProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Parser/WithStatementTest.php">
    <PossiblyUnusedMethod>
      <code>parseWith</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/TestCase.php">
    <InvalidReturnStatement>
      <code>$data</code>
    </InvalidReturnStatement>
    <InvalidReturnType>
      <code><![CDATA[array{
     *   query: string,
     *   lexer: Lexer,
     *   parser: Parser|null,
     *   errors: array{lexer: list<array{string, string, int, int}>, parser: list<array{string, Token, int}>}
     * }]]></code>
    </InvalidReturnType>
    <RedundantCast>
      <code><![CDATA[(int) $err->getCode()]]></code>
      <code><![CDATA[(int) $err->getCode()]]></code>
    </RedundantCast>
  </file>
  <file src="tests/Tools/templates/TestContext.php">
    <UnusedClass>
      <code>TestContext</code>
    </UnusedClass>
  </file>
  <file src="tests/Utils/BufferedQueryTest.php">
    <PossiblyUnusedMethod>
      <code>extractProvider</code>
    </PossiblyUnusedMethod>
    <RiskyTruthyFalsyComparison>
      <code>$stmt</code>
    </RiskyTruthyFalsyComparison>
  </file>
  <file src="tests/Utils/CLITest.php">
    <PossiblyUnusedMethod>
      <code>highlightParamsProvider</code>
      <code>highlightParamsStdInProvider</code>
      <code>lintParamsProvider</code>
      <code>lintParamsStdInProvider</code>
      <code>stdinParamsProvider</code>
      <code>tokenizeParamsProvider</code>
      <code>tokenizeParamsStdInProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Utils/FormatterTest.php">
    <PossiblyUnusedMethod>
      <code>formatQueriesProviders</code>
      <code>mergeFormatsProvider</code>
    </PossiblyUnusedMethod>
    <UnusedMethodCall>
      <code>setAccessible</code>
    </UnusedMethodCall>
  </file>
  <file src="tests/Utils/QueryTest.php">
    <PossiblyNullArgument>
      <code><![CDATA[$parser->list]]></code>
      <code><![CDATA[$parser->list]]></code>
      <code><![CDATA[$parser->list]]></code>
      <code><![CDATA[$parser->list]]></code>
      <code><![CDATA[$parser->list]]></code>
      <code><![CDATA[$parser->list]]></code>
      <code><![CDATA[$parser->list]]></code>
      <code><![CDATA[$parser->list]]></code>
      <code><![CDATA[$parser->list]]></code>
    </PossiblyNullArgument>
    <PossiblyUnusedMethod>
      <code>getFlagsProvider</code>
      <code>getTablesProvider</code>
    </PossiblyUnusedMethod>
    <UnusedVariable>
      <code>$delimiter</code>
      <code>$delimiter</code>
      <code>$query</code>
    </UnusedVariable>
  </file>
  <file src="tests/Utils/RoutineTest.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$parser->statements[0]]]></code>
    </ArgumentTypeCoercion>
    <PossiblyUnusedMethod>
      <code>getParameterProvider</code>
      <code>getParametersProvider</code>
      <code>getReturnTypeProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/Utils/TableTest.php">
    <ArgumentTypeCoercion>
      <code><![CDATA[$parser->statements[0]]]></code>
      <code><![CDATA[$parser->statements[0]]]></code>
    </ArgumentTypeCoercion>
    <PossiblyUnusedMethod>
      <code>getFieldsProvider</code>
      <code>getForeignKeysProvider</code>
    </PossiblyUnusedMethod>
  </file>
  <file src="tests/benchmarks/UtfStringBench.php">
    <MissingConstructor>
      <code>$testContents</code>
    </MissingConstructor>
    <UnusedClass>
      <code>UtfStringBench</code>
    </UnusedClass>
  </file>
</files>
